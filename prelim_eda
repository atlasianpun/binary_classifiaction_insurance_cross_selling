{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":73291,"databundleVersionId":8930475,"sourceType":"competition"}],"dockerImageVersionId":30732,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"##Required packages \n\n#Generic packages\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport gc\nimport os\nimport warnings\nimport ydata_profiling as dp\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.decomposition import PCA\nfrom sklearn.model_selection import KFold\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import r2_score\n\nfrom catboost import CatBoostClassifier\nfrom sklearn.linear_model import LogisticRegression,RidgeClassifier,Lasso\nfrom sklearn.metrics import roc_auc_score,accuracy_score\nfrom sklearn.model_selection import KFold,StratifiedKFold,RepeatedStratifiedKFold,GridSearchCV\nfrom sklearn.cluster import KMeans\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import AdaBoostClassifier,RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.neural_network import MLPClassifier\nimport lightgbm as lgb\nimport xgboost as xgb\n\n\nwarnings.filterwarnings('ignore')\ngc.enable()\n%matplotlib inline\n\n#Setting up display options for pandas dataframe\npd.set_option('display.max_rows', None)\npd.set_option('display.max_columns', None)\npd.set_option('display.width', None)\npd.set_option('display.max_colwidth', None)","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-10T15:21:46.959401Z","iopub.execute_input":"2024-07-10T15:21:46.959815Z","iopub.status.idle":"2024-07-10T15:21:58.079202Z","shell.execute_reply.started":"2024-07-10T15:21:46.959781Z","shell.execute_reply":"2024-07-10T15:21:58.077895Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"\ndef feature_summary(df_fa):\n    # Print the shape of the DataFrame\n    print('DataFrame shape')\n    print('rows:', df_fa.shape[0])  # Number of rows\n    print('cols:', df_fa.shape[1])  # Number of columns\n    \n    # Define the list of summary metrics\n    col_list = ['null', 'unique_count', 'data_type', 'max/min', 'mean', 'median', 'mode', 'std', 'skewness', 'sample_values']\n    \n    # Create an empty DataFrame to store the summary, using the columns of df_fa as index\n    df = pd.DataFrame(index=df_fa.columns, columns=col_list)\n    \n    # Calculate the number of null values for each column\n    df['null'] = list([len(df_fa[col][df_fa[col].isnull()]) for i, col in enumerate(df_fa.columns)])\n    \n    # Calculate the number of unique values for each column\n    df['unique_count'] = list([len(df_fa[col].unique()) for i, col in enumerate(df_fa.columns)])\n    \n    # Record the data type of each column\n    df['data_type'] = list([df_fa[col].dtype for i, col in enumerate(df_fa.columns)])\n    \n    # Iterate over each column to compute additional statistics based on data type\n    for i, col in enumerate(df_fa.columns):\n        # If the column is numeric (float or int)\n        if 'float' in str(df_fa[col].dtype) or 'int' in str(df_fa[col].dtype):\n            # Calculate max and min values, rounded to 2 decimal places\n            df.at[col, 'max/min'] = str(round(df_fa[col].max(), 2)) + '/' + str(round(df_fa[col].min(), 2))\n            # Calculate mean, median, mode, standard deviation, and skewness, rounded to 4 decimal places\n            df.at[col, 'mean'] = round(df_fa[col].mean(), 4)\n            df.at[col, 'median'] = round(df_fa[col].median(), 4)\n            df.at[col, 'mode'] = round(df_fa[col].mode()[0], 4)\n            df.at[col, 'std'] = round(df_fa[col].std(), 4)\n            df.at[col, 'skewness'] = round(df_fa[col].skew(), 4)\n        # If the column is of datetime type\n        elif 'datetime64[ns]' in str(df_fa[col].dtype):\n            # Calculate max and min dates\n            df.at[col, 'max/min'] = str(df_fa[col].max()) + '/' + str(df_fa[col].min())\n        \n        # For all columns, store a sample of up to 20 unique values\n        df.at[col, 'sample_values'] = list(df_fa[col].unique()[0:20])\n    \n    # Display the first few rows of the input DataFrame\n    display(df_fa.head())\n    \n    # Return the summary DataFrame with NaN values filled with '-'\n    return df.fillna('-')\n\n","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:21:58.082181Z","iopub.execute_input":"2024-07-10T15:21:58.082587Z","iopub.status.idle":"2024-07-10T15:21:58.101955Z","shell.execute_reply.started":"2024-07-10T15:21:58.082555Z","shell.execute_reply":"2024-07-10T15:21:58.100577Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"\ndef feature_compare(df_fa, df_ft):\n    # Print the shape of the train DataFrame\n    print('Train DataFrame shape')\n    print('rows:', df_fa.shape[0])  # Number of rows in the train DataFrame\n    print('cols:', df_fa.shape[1])  # Number of columns in the train DataFrame\n    \n    # Print the shape of the test DataFrame\n    print('Test DataFrame shape')\n    print('rows:', df_ft.shape[0])  # Number of rows in the test DataFrame\n    print('cols:', df_ft.shape[1])  # Number of columns in the test DataFrame\n    \n    # Define the list of summary metrics to be calculated\n    col_list = ['null', 'unique_count', 'data_type', 'max/min', 'mean', 'median', 'mode', 'std', 'skewness', 'sample_values']\n    \n    # Create a MultiIndex DataFrame to store the summary statistics\n    # The index is a combination of the columns from df_fa and a level indicating 'train' or 'test'\n    df = pd.DataFrame(index=pd.MultiIndex.from_product([df_fa.columns, ['train', 'test']], names=['features', 'dataset']), columns=col_list)\n    \n    # Calculate the number of null values for each column in the train DataFrame\n    df.loc[(slice(None), ['train']), 'null'] = list([len(df_fa[col][df_fa[col].isnull()]) for i, col in enumerate(df_fa.columns)])\n    \n    # Calculate the number of null values for each column in the test DataFrame\n    df.loc[(slice(None), ['test']), 'null'] = list([len(df_ft[col][df_ft[col].isnull()]) for i, col in enumerate(df_ft.columns)])\n    \n    # Calculate the number of unique values for each column in the train DataFrame\n    df.loc[(slice(None), ['train']), 'unique_count'] = list([len(df_fa[col].unique()) for i, col in enumerate(df_fa.columns)])\n    \n    # Calculate the number of unique values for each column in the test DataFrame\n    df.loc[(slice(None), ['test']), 'unique_count'] = list([len(df_ft[col].unique()) for i, col in enumerate(df_ft.columns)])\n    \n    # Record the data type of each column in the train DataFrame\n    df.loc[(slice(None), ['train']), 'data_type'] = list([df_fa[col].dtype for i, col in enumerate(df_fa.columns)])\n    \n    # Record the data type of each column in the test DataFrame\n    df.loc[(slice(None), ['test']), 'data_type'] = list([df_ft[col].dtype for i, col in enumerate(df_ft.columns)])\n    \n    # Iterate over each column in the train DataFrame to compute additional statistics based on data type\n    for i, col in enumerate(df_fa.columns):\n        # If the column is numeric (float or int)\n        if 'float' in str(df_fa[col].dtype) or 'int' in str(df_fa[col].dtype):\n            # Calculate max and min values, rounded to 2 decimal places\n            df.loc[([col], ['train']), 'max/min'] = str(round(df_fa[col].max(), 2)) + '/' + str(round(df_fa[col].min(), 2))\n            # Calculate mean, median, mode, standard deviation, and skewness, rounded to 4 decimal places\n            df.loc[([col], ['train']), 'mean'] = round(df_fa[col].mean(), 4)\n            df.loc[([col], ['train']), 'median'] = round(df_fa[col].median(), 4)\n            df.loc[([col], ['train']), 'mode'] = round(df_fa[col].mode()[0], 4)\n            df.loc[([col], ['train']), 'std'] = round(df_fa[col].std(), 4)\n            df.loc[([col], ['train']), 'skewness'] = round(df_fa[col].skew(), 4)\n        # If the column is of datetime type\n        elif 'datetime64[ns]' in str(df_fa[col].dtype):\n            # Calculate max and min dates\n            df.loc[([col], ['train']), 'max/min'] = str(df_fa[col].max()) + '/' + str(df_fa[col].min())\n        # Store a sample of up to 20 unique values from the column\n        df.loc[([col], ['train']), 'sample_values'] = str(list(df_fa[col].unique()[0:20]))\n    \n    # Iterate over each column in the test DataFrame to compute additional statistics based on data type\n    for i, col in enumerate(df_ft.columns):\n        # If the column is numeric (float or int)\n        if 'float' in str(df_fa[col].dtype) or 'int' in str(df_fa[col].dtype):\n            # Calculate max and min values, rounded to 2 decimal places\n            df.loc[([col], ['test']), 'max/min'] = str(round(df_ft[col].max(), 2)) + '/' + str(round(df_ft[col].min(), 2))\n            # Calculate mean, median, mode, standard deviation, and skewness, rounded to 4 decimal places\n            df.loc[([col], ['test']), 'mean'] = round(df_ft[col].mean(), 4)\n            df.loc[([col], ['test']), 'median'] = round(df_ft[col].median(), 4)\n            df.loc[([col], ['test']), 'mode'] = round(df_ft[col].mode()[0], 4)\n            df.loc[([col], ['test']), 'std'] = round(df_ft[col].std(), 4)\n            df.loc[([col], ['test']), 'skewness'] = round(df_ft[col].skew(), 4)\n        # If the column is of datetime type\n        elif 'datetime64[ns]' in str(df_fa[col].dtype):\n            # Calculate max and min dates\n            df.loc[([col], ['test']), 'max/min'] = str(df_ft[col].max()) + '/' + str(df_ft[col].min())\n        # Store a sample of up to 15 unique values from the column\n        df.loc[([col], ['test']), 'sample_values'] = str(list(df_ft[col].unique()[0:15]))\n    \n    # Return the summary DataFrame with NaN values filled with '-'\n    return df.fillna('-')\n","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:21:58.103969Z","iopub.execute_input":"2024-07-10T15:21:58.104502Z","iopub.status.idle":"2024-07-10T15:21:58.139821Z","shell.execute_reply.started":"2024-07-10T15:21:58.104459Z","shell.execute_reply":"2024-07-10T15:21:58.138497Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"df_train = pd.read_csv('/kaggle/input/playground-series-s4e7/train.csv')\ndf_test  = pd.read_csv('/kaggle/input/playground-series-s4e7/test.csv')","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:21:58.141618Z","iopub.execute_input":"2024-07-10T15:21:58.142009Z","iopub.status.idle":"2024-07-10T15:22:39.940830Z","shell.execute_reply.started":"2024-07-10T15:21:58.141977Z","shell.execute_reply":"2024-07-10T15:22:39.939508Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Rename the column 'Response' to 'Target' in the DataFrame df_test\ndf_train.rename(columns={'Response': 'Target'}, inplace=True)\n","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:22:39.944230Z","iopub.execute_input":"2024-07-10T15:22:39.944636Z","iopub.status.idle":"2024-07-10T15:22:39.957038Z","shell.execute_reply.started":"2024-07-10T15:22:39.944605Z","shell.execute_reply":"2024-07-10T15:22:39.955369Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"code","source":"# Initialize the LabelEncoder\nlabel_encoder = LabelEncoder()\n\n# List of columns that are categorical\ncategorical_columns = ['Gender', 'Vehicle_Age', 'Vehicle_Damage']\n\n# Apply label encoding to each categorical column\nfor column in categorical_columns:\n    df_train[column] = label_encoder.fit_transform(df_train[column])\n    df_test[column] = label_encoder.fit_transform(df_test[column])","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:22:39.958495Z","iopub.execute_input":"2024-07-10T15:22:39.958842Z","iopub.status.idle":"2024-07-10T15:22:58.649351Z","shell.execute_reply.started":"2024-07-10T15:22:39.958815Z","shell.execute_reply":"2024-07-10T15:22:58.648024Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"print(\"Summary of Train dataset:\")\ndf_train.describe()","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:22:58.650947Z","iopub.execute_input":"2024-07-10T15:22:58.651438Z","iopub.status.idle":"2024-07-10T15:23:04.394205Z","shell.execute_reply.started":"2024-07-10T15:22:58.651395Z","shell.execute_reply":"2024-07-10T15:23:04.392773Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stdout","text":"Summary of Train dataset:\n","output_type":"stream"},{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"                 id        Gender           Age  Driving_License  \\\ncount  1.150480e+07  1.150480e+07  1.150480e+07     1.150480e+07   \nmean   5.752398e+06  5.413510e-01  3.838356e+01     9.980220e-01   \nstd    3.321149e+06  4.982872e-01  1.499346e+01     4.443120e-02   \nmin    0.000000e+00  0.000000e+00  2.000000e+01     0.000000e+00   \n25%    2.876199e+06  0.000000e+00  2.400000e+01     1.000000e+00   \n50%    5.752398e+06  1.000000e+00  3.600000e+01     1.000000e+00   \n75%    8.628598e+06  1.000000e+00  4.900000e+01     1.000000e+00   \nmax    1.150480e+07  1.000000e+00  8.500000e+01     1.000000e+00   \n\n        Region_Code  Previously_Insured   Vehicle_Age  Vehicle_Damage  \\\ncount  1.150480e+07        1.150480e+07  1.150480e+07    1.150480e+07   \nmean   2.641869e+01        4.629966e-01  5.215298e-01    5.026798e-01   \nstd    1.299159e+01        4.986289e-01  5.767390e-01    4.999928e-01   \nmin    0.000000e+00        0.000000e+00  0.000000e+00    0.000000e+00   \n25%    1.500000e+01        0.000000e+00  0.000000e+00    0.000000e+00   \n50%    2.800000e+01        0.000000e+00  0.000000e+00    1.000000e+00   \n75%    3.500000e+01        1.000000e+00  1.000000e+00    1.000000e+00   \nmax    5.200000e+01        1.000000e+00  2.000000e+00    1.000000e+00   \n\n       Annual_Premium  Policy_Sales_Channel       Vintage        Target  \ncount    1.150480e+07          1.150480e+07  1.150480e+07  1.150480e+07  \nmean     3.046137e+04          1.124254e+02  1.638977e+02  1.229973e-01  \nstd      1.645475e+04          5.403571e+01  7.997953e+01  3.284341e-01  \nmin      2.630000e+03          1.000000e+00  1.000000e+01  0.000000e+00  \n25%      2.527700e+04          2.900000e+01  9.900000e+01  0.000000e+00  \n50%      3.182400e+04          1.510000e+02  1.660000e+02  0.000000e+00  \n75%      3.945100e+04          1.520000e+02  2.320000e+02  0.000000e+00  \nmax      5.401650e+05          1.630000e+02  2.990000e+02  1.000000e+00  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Driving_License</th>\n      <th>Region_Code</th>\n      <th>Previously_Insured</th>\n      <th>Vehicle_Age</th>\n      <th>Vehicle_Damage</th>\n      <th>Annual_Premium</th>\n      <th>Policy_Sales_Channel</th>\n      <th>Vintage</th>\n      <th>Target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1.150480e+07</td>\n      <td>1.150480e+07</td>\n      <td>1.150480e+07</td>\n      <td>1.150480e+07</td>\n      <td>1.150480e+07</td>\n      <td>1.150480e+07</td>\n      <td>1.150480e+07</td>\n      <td>1.150480e+07</td>\n      <td>1.150480e+07</td>\n      <td>1.150480e+07</td>\n      <td>1.150480e+07</td>\n      <td>1.150480e+07</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>5.752398e+06</td>\n      <td>5.413510e-01</td>\n      <td>3.838356e+01</td>\n      <td>9.980220e-01</td>\n      <td>2.641869e+01</td>\n      <td>4.629966e-01</td>\n      <td>5.215298e-01</td>\n      <td>5.026798e-01</td>\n      <td>3.046137e+04</td>\n      <td>1.124254e+02</td>\n      <td>1.638977e+02</td>\n      <td>1.229973e-01</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>3.321149e+06</td>\n      <td>4.982872e-01</td>\n      <td>1.499346e+01</td>\n      <td>4.443120e-02</td>\n      <td>1.299159e+01</td>\n      <td>4.986289e-01</td>\n      <td>5.767390e-01</td>\n      <td>4.999928e-01</td>\n      <td>1.645475e+04</td>\n      <td>5.403571e+01</td>\n      <td>7.997953e+01</td>\n      <td>3.284341e-01</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>2.000000e+01</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>2.630000e+03</td>\n      <td>1.000000e+00</td>\n      <td>1.000000e+01</td>\n      <td>0.000000e+00</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2.876199e+06</td>\n      <td>0.000000e+00</td>\n      <td>2.400000e+01</td>\n      <td>1.000000e+00</td>\n      <td>1.500000e+01</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>2.527700e+04</td>\n      <td>2.900000e+01</td>\n      <td>9.900000e+01</td>\n      <td>0.000000e+00</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>5.752398e+06</td>\n      <td>1.000000e+00</td>\n      <td>3.600000e+01</td>\n      <td>1.000000e+00</td>\n      <td>2.800000e+01</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>3.182400e+04</td>\n      <td>1.510000e+02</td>\n      <td>1.660000e+02</td>\n      <td>0.000000e+00</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>8.628598e+06</td>\n      <td>1.000000e+00</td>\n      <td>4.900000e+01</td>\n      <td>1.000000e+00</td>\n      <td>3.500000e+01</td>\n      <td>1.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>3.945100e+04</td>\n      <td>1.520000e+02</td>\n      <td>2.320000e+02</td>\n      <td>0.000000e+00</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1.150480e+07</td>\n      <td>1.000000e+00</td>\n      <td>8.500000e+01</td>\n      <td>1.000000e+00</td>\n      <td>5.200000e+01</td>\n      <td>1.000000e+00</td>\n      <td>2.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>5.401650e+05</td>\n      <td>1.630000e+02</td>\n      <td>2.990000e+02</td>\n      <td>1.000000e+00</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df_train.shape","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:23:04.395685Z","iopub.execute_input":"2024-07-10T15:23:04.396041Z","iopub.status.idle":"2024-07-10T15:23:04.403861Z","shell.execute_reply.started":"2024-07-10T15:23:04.396011Z","shell.execute_reply":"2024-07-10T15:23:04.402488Z"},"trusted":true},"execution_count":8,"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"(11504798, 12)"},"metadata":{}}]},{"cell_type":"code","source":"##REMOVING WHITE SPACES FROM FEATURE NAMES\ndf_train.columns=[x.replace(' ','_') for x in df_train.columns]\ndf_test.columns=[x.replace(' ','_') for x in df_test.columns]","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:23:04.405464Z","iopub.execute_input":"2024-07-10T15:23:04.405892Z","iopub.status.idle":"2024-07-10T15:23:04.419177Z","shell.execute_reply.started":"2024-07-10T15:23:04.405861Z","shell.execute_reply":"2024-07-10T15:23:04.417857Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"code","source":"df_train.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:23:04.420825Z","iopub.execute_input":"2024-07-10T15:23:04.421311Z","iopub.status.idle":"2024-07-10T15:23:04.588593Z","shell.execute_reply.started":"2024-07-10T15:23:04.421240Z","shell.execute_reply":"2024-07-10T15:23:04.587407Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"id                      0\nGender                  0\nAge                     0\nDriving_License         0\nRegion_Code             0\nPreviously_Insured      0\nVehicle_Age             0\nVehicle_Damage          0\nAnnual_Premium          0\nPolicy_Sales_Channel    0\nVintage                 0\nTarget                  0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df_train.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:23:04.589897Z","iopub.execute_input":"2024-07-10T15:23:04.590220Z","iopub.status.idle":"2024-07-10T15:23:04.612336Z","shell.execute_reply.started":"2024-07-10T15:23:04.590194Z","shell.execute_reply":"2024-07-10T15:23:04.610857Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"   id  Gender  Age  Driving_License  Region_Code  Previously_Insured  \\\n0   0       1   21                1         35.0                   0   \n1   1       1   43                1         28.0                   0   \n2   2       0   25                1         14.0                   1   \n3   3       0   35                1          1.0                   0   \n4   4       0   36                1         15.0                   1   \n5   5       0   31                1         47.0                   1   \n6   6       1   23                1         45.0                   1   \n7   7       0   47                1          8.0                   0   \n8   8       0   26                1         28.0                   1   \n9   9       0   66                1         11.0                   0   \n\n   Vehicle_Age  Vehicle_Damage  Annual_Premium  Policy_Sales_Channel  Vintage  \\\n0            0               1         65101.0                 124.0      187   \n1            2               1         58911.0                  26.0      288   \n2            1               0         38043.0                 152.0      254   \n3            0               1          2630.0                 156.0       76   \n4            0               0         31951.0                 152.0      294   \n5            1               0         28150.0                 152.0      197   \n6            1               0         27128.0                 152.0      190   \n7            0               1         40659.0                  26.0      262   \n8            1               0         31639.0                 152.0       36   \n9            0               1          2630.0                  26.0      125   \n\n   Target  \n0       0  \n1       1  \n2       0  \n3       0  \n4       0  \n5       0  \n6       0  \n7       1  \n8       0  \n9       0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Driving_License</th>\n      <th>Region_Code</th>\n      <th>Previously_Insured</th>\n      <th>Vehicle_Age</th>\n      <th>Vehicle_Damage</th>\n      <th>Annual_Premium</th>\n      <th>Policy_Sales_Channel</th>\n      <th>Vintage</th>\n      <th>Target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1</td>\n      <td>21</td>\n      <td>1</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>65101.0</td>\n      <td>124.0</td>\n      <td>187</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>43</td>\n      <td>1</td>\n      <td>28.0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>58911.0</td>\n      <td>26.0</td>\n      <td>288</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>0</td>\n      <td>25</td>\n      <td>1</td>\n      <td>14.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>38043.0</td>\n      <td>152.0</td>\n      <td>254</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>0</td>\n      <td>35</td>\n      <td>1</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2630.0</td>\n      <td>156.0</td>\n      <td>76</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>0</td>\n      <td>36</td>\n      <td>1</td>\n      <td>15.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>31951.0</td>\n      <td>152.0</td>\n      <td>294</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>5</td>\n      <td>0</td>\n      <td>31</td>\n      <td>1</td>\n      <td>47.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>28150.0</td>\n      <td>152.0</td>\n      <td>197</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>6</td>\n      <td>1</td>\n      <td>23</td>\n      <td>1</td>\n      <td>45.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>27128.0</td>\n      <td>152.0</td>\n      <td>190</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7</td>\n      <td>0</td>\n      <td>47</td>\n      <td>1</td>\n      <td>8.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>40659.0</td>\n      <td>26.0</td>\n      <td>262</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>8</td>\n      <td>0</td>\n      <td>26</td>\n      <td>1</td>\n      <td>28.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>31639.0</td>\n      <td>152.0</td>\n      <td>36</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>9</td>\n      <td>0</td>\n      <td>66</td>\n      <td>1</td>\n      <td>11.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2630.0</td>\n      <td>26.0</td>\n      <td>125</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"%%time\n#CHECKING TRAIN AND TEST DATASET MEMORY USAGE BEFORE DOWNCASTING\nprint('\\ntrain dataset data usage information before downcasting\\n')\ndf_train.info(memory_usage='deep',max_cols=1)\nprint('\\ntest dataset data usage information before downcasting\\n')\ndf_test.info(memory_usage='deep',max_cols=1)\n\n\n#DOWNCASTING TRAIN DATASET\nfor column in df_train.columns:\n    if df_train[column].dtype == \"float64\":\n        df_train[column]=pd.to_numeric(df_train[column], downcast=\"float\")\n    if df_train[column].dtype == \"int64\":\n        df_train[column]=pd.to_numeric(df_train[column], downcast=\"integer\")\n        \n#DOWNCASTING TEST DATASET\nfor column in df_test.columns:\n    if df_test[column].dtype == \"float64\":\n        df_test[column]=pd.to_numeric(df_test[column], downcast=\"float\")\n    if df_test[column].dtype == \"int64\":\n        df_test[column]=pd.to_numeric(df_test[column], downcast=\"integer\")\n        \n#CHECKING TRAIN AND TEST DATASET MEMORY USAGE AFTER DOWNCASTING\nprint('train dataset data usage information after downcasting\\n')\ndf_train.info(memory_usage='deep',max_cols=1)\nprint('\\ntest dataset data usage information after downcasting\\n')\ndf_test.info(memory_usage='deep',max_cols=1)","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:23:04.614488Z","iopub.execute_input":"2024-07-10T15:23:04.614944Z","iopub.status.idle":"2024-07-10T15:23:09.152550Z","shell.execute_reply.started":"2024-07-10T15:23:04.614900Z","shell.execute_reply":"2024-07-10T15:23:09.151308Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"\ntrain dataset data usage information before downcasting\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 11504798 entries, 0 to 11504797\nColumns: 12 entries, id to Target\ndtypes: float64(3), int64(9)\nmemory usage: 1.0 GB\n\ntest dataset data usage information before downcasting\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 7669866 entries, 0 to 7669865\nColumns: 11 entries, id to Vintage\ndtypes: float64(3), int64(8)\nmemory usage: 643.7 MB\ntrain dataset data usage information after downcasting\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 11504798 entries, 0 to 11504797\nColumns: 12 entries, id to Target\ndtypes: float32(3), int16(1), int32(1), int8(7)\nmemory usage: 274.3 MB\n\ntest dataset data usage information after downcasting\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 7669866 entries, 0 to 7669865\nColumns: 11 entries, id to Vintage\ndtypes: float32(3), int16(1), int32(1), int8(6)\nmemory usage: 175.5 MB\nCPU times: user 3.09 s, sys: 1.41 s, total: 4.5 s\nWall time: 4.52 s\n","output_type":"stream"}]},{"cell_type":"code","source":"feature_summary(df_train)","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:23:09.153937Z","iopub.execute_input":"2024-07-10T15:23:09.154307Z","iopub.status.idle":"2024-07-10T15:23:19.916563Z","shell.execute_reply.started":"2024-07-10T15:23:09.154269Z","shell.execute_reply":"2024-07-10T15:23:19.915345Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stdout","text":"DataFrame shape\nrows: 11504798\ncols: 12\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"   id  Gender  Age  Driving_License  Region_Code  Previously_Insured  \\\n0   0       1   21                1         35.0                   0   \n1   1       1   43                1         28.0                   0   \n2   2       0   25                1         14.0                   1   \n3   3       0   35                1          1.0                   0   \n4   4       0   36                1         15.0                   1   \n\n   Vehicle_Age  Vehicle_Damage  Annual_Premium  Policy_Sales_Channel  Vintage  \\\n0            0               1         65101.0                 124.0      187   \n1            2               1         58911.0                  26.0      288   \n2            1               0         38043.0                 152.0      254   \n3            0               1          2630.0                 156.0       76   \n4            0               0         31951.0                 152.0      294   \n\n   Target  \n0       0  \n1       1  \n2       0  \n3       0  \n4       0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Driving_License</th>\n      <th>Region_Code</th>\n      <th>Previously_Insured</th>\n      <th>Vehicle_Age</th>\n      <th>Vehicle_Damage</th>\n      <th>Annual_Premium</th>\n      <th>Policy_Sales_Channel</th>\n      <th>Vintage</th>\n      <th>Target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1</td>\n      <td>21</td>\n      <td>1</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>65101.0</td>\n      <td>124.0</td>\n      <td>187</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>43</td>\n      <td>1</td>\n      <td>28.0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>58911.0</td>\n      <td>26.0</td>\n      <td>288</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>0</td>\n      <td>25</td>\n      <td>1</td>\n      <td>14.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>38043.0</td>\n      <td>152.0</td>\n      <td>254</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>0</td>\n      <td>35</td>\n      <td>1</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2630.0</td>\n      <td>156.0</td>\n      <td>76</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>0</td>\n      <td>36</td>\n      <td>1</td>\n      <td>15.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>31951.0</td>\n      <td>152.0</td>\n      <td>294</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"                      null  unique_count data_type          max/min  \\\nid                       0      11504798     int32       11504797/0   \nGender                   0             2      int8              1/0   \nAge                      0            66      int8            85/20   \nDriving_License          0             2      int8              1/0   \nRegion_Code              0            54   float32         52.0/0.0   \nPreviously_Insured       0             2      int8              1/0   \nVehicle_Age              0             3      int8              2/0   \nVehicle_Damage           0             2      int8              1/0   \nAnnual_Premium           0         51728   float32  540165.0/2630.0   \nPolicy_Sales_Channel     0           152   float32        163.0/1.0   \nVintage                  0           290     int16           299/10   \nTarget                   0             2      int8              1/0   \n\n                              mean     median    mode           std  skewness  \\\nid                    5.752398e+06  5752398.5     0.0  3.321149e+06    0.0000   \nGender                5.414000e-01        1.0     1.0  4.983000e-01   -0.1660   \nAge                   3.838360e+01       36.0    24.0  1.499350e+01    0.6373   \nDriving_License       9.980000e-01        1.0     1.0  4.440000e-02  -22.4177   \nRegion_Code           2.641870e+01       28.0    28.0  1.299160e+01   -0.1308   \nPreviously_Insured    4.630000e-01        0.0     0.0  4.986000e-01    0.1484   \nVehicle_Age           5.215000e-01        0.0     0.0  5.767000e-01    0.5657   \nVehicle_Damage        5.027000e-01        1.0     1.0  5.000000e-01   -0.0107   \nAnnual_Premium        3.046136e+04    31824.0  2630.0  1.645474e+04    0.7769   \nPolicy_Sales_Channel  1.124254e+02      151.0   152.0  5.403570e+01   -0.9151   \nVintage               1.638977e+02      166.0   187.0  7.997950e+01   -0.1081   \nTarget                1.230000e-01        0.0     0.0  3.284000e-01    2.2958   \n\n                                                                                                                                                                                            sample_values  \nid                                                                                                                                 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]  \nGender                                                                                                                                                                                             [1, 0]  \nAge                                                                                                                      [21, 43, 25, 35, 36, 31, 23, 47, 26, 66, 22, 27, 24, 79, 34, 20, 42, 40, 50, 67]  \nDriving_License                                                                                                                                                                                    [1, 0]  \nRegion_Code                                                                         [35.0, 28.0, 14.0, 1.0, 15.0, 47.0, 45.0, 8.0, 11.0, 3.0, 10.0, 12.0, 37.0, 50.0, 30.0, 46.0, 29.0, 16.0, 26.0, 25.0]  \nPreviously_Insured                                                                                                                                                                                 [0, 1]  \nVehicle_Age                                                                                                                                                                                     [0, 2, 1]  \nVehicle_Damage                                                                                                                                                                                     [1, 0]  \nAnnual_Premium        [65101.0, 58911.0, 38043.0, 2630.0, 31951.0, 28150.0, 27128.0, 40659.0, 31639.0, 27996.0, 38104.0, 43746.0, 23692.0, 66887.0, 30226.0, 36389.0, 25769.0, 40797.0, 29698.0, 27677.0]  \nPolicy_Sales_Channel                                                    [124.0, 26.0, 152.0, 156.0, 160.0, 8.0, 31.0, 157.0, 60.0, 122.0, 15.0, 30.0, 147.0, 1.0, 63.0, 136.0, 154.0, 18.0, 135.0, 151.0]  \nVintage                                                                                                 [187, 288, 254, 76, 294, 197, 190, 262, 36, 125, 215, 30, 203, 259, 245, 150, 240, 242, 117, 151]  \nTarget                                                                                                                                                                                             [0, 1]  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>null</th>\n      <th>unique_count</th>\n      <th>data_type</th>\n      <th>max/min</th>\n      <th>mean</th>\n      <th>median</th>\n      <th>mode</th>\n      <th>std</th>\n      <th>skewness</th>\n      <th>sample_values</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>id</th>\n      <td>0</td>\n      <td>11504798</td>\n      <td>int32</td>\n      <td>11504797/0</td>\n      <td>5.752398e+06</td>\n      <td>5752398.5</td>\n      <td>0.0</td>\n      <td>3.321149e+06</td>\n      <td>0.0000</td>\n      <td>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]</td>\n    </tr>\n    <tr>\n      <th>Gender</th>\n      <td>0</td>\n      <td>2</td>\n      <td>int8</td>\n      <td>1/0</td>\n      <td>5.414000e-01</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>4.983000e-01</td>\n      <td>-0.1660</td>\n      <td>[1, 0]</td>\n    </tr>\n    <tr>\n      <th>Age</th>\n      <td>0</td>\n      <td>66</td>\n      <td>int8</td>\n      <td>85/20</td>\n      <td>3.838360e+01</td>\n      <td>36.0</td>\n      <td>24.0</td>\n      <td>1.499350e+01</td>\n      <td>0.6373</td>\n      <td>[21, 43, 25, 35, 36, 31, 23, 47, 26, 66, 22, 27, 24, 79, 34, 20, 42, 40, 50, 67]</td>\n    </tr>\n    <tr>\n      <th>Driving_License</th>\n      <td>0</td>\n      <td>2</td>\n      <td>int8</td>\n      <td>1/0</td>\n      <td>9.980000e-01</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>4.440000e-02</td>\n      <td>-22.4177</td>\n      <td>[1, 0]</td>\n    </tr>\n    <tr>\n      <th>Region_Code</th>\n      <td>0</td>\n      <td>54</td>\n      <td>float32</td>\n      <td>52.0/0.0</td>\n      <td>2.641870e+01</td>\n      <td>28.0</td>\n      <td>28.0</td>\n      <td>1.299160e+01</td>\n      <td>-0.1308</td>\n      <td>[35.0, 28.0, 14.0, 1.0, 15.0, 47.0, 45.0, 8.0, 11.0, 3.0, 10.0, 12.0, 37.0, 50.0, 30.0, 46.0, 29.0, 16.0, 26.0, 25.0]</td>\n    </tr>\n    <tr>\n      <th>Previously_Insured</th>\n      <td>0</td>\n      <td>2</td>\n      <td>int8</td>\n      <td>1/0</td>\n      <td>4.630000e-01</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>4.986000e-01</td>\n      <td>0.1484</td>\n      <td>[0, 1]</td>\n    </tr>\n    <tr>\n      <th>Vehicle_Age</th>\n      <td>0</td>\n      <td>3</td>\n      <td>int8</td>\n      <td>2/0</td>\n      <td>5.215000e-01</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>5.767000e-01</td>\n      <td>0.5657</td>\n      <td>[0, 2, 1]</td>\n    </tr>\n    <tr>\n      <th>Vehicle_Damage</th>\n      <td>0</td>\n      <td>2</td>\n      <td>int8</td>\n      <td>1/0</td>\n      <td>5.027000e-01</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>5.000000e-01</td>\n      <td>-0.0107</td>\n      <td>[1, 0]</td>\n    </tr>\n    <tr>\n      <th>Annual_Premium</th>\n      <td>0</td>\n      <td>51728</td>\n      <td>float32</td>\n      <td>540165.0/2630.0</td>\n      <td>3.046136e+04</td>\n      <td>31824.0</td>\n      <td>2630.0</td>\n      <td>1.645474e+04</td>\n      <td>0.7769</td>\n      <td>[65101.0, 58911.0, 38043.0, 2630.0, 31951.0, 28150.0, 27128.0, 40659.0, 31639.0, 27996.0, 38104.0, 43746.0, 23692.0, 66887.0, 30226.0, 36389.0, 25769.0, 40797.0, 29698.0, 27677.0]</td>\n    </tr>\n    <tr>\n      <th>Policy_Sales_Channel</th>\n      <td>0</td>\n      <td>152</td>\n      <td>float32</td>\n      <td>163.0/1.0</td>\n      <td>1.124254e+02</td>\n      <td>151.0</td>\n      <td>152.0</td>\n      <td>5.403570e+01</td>\n      <td>-0.9151</td>\n      <td>[124.0, 26.0, 152.0, 156.0, 160.0, 8.0, 31.0, 157.0, 60.0, 122.0, 15.0, 30.0, 147.0, 1.0, 63.0, 136.0, 154.0, 18.0, 135.0, 151.0]</td>\n    </tr>\n    <tr>\n      <th>Vintage</th>\n      <td>0</td>\n      <td>290</td>\n      <td>int16</td>\n      <td>299/10</td>\n      <td>1.638977e+02</td>\n      <td>166.0</td>\n      <td>187.0</td>\n      <td>7.997950e+01</td>\n      <td>-0.1081</td>\n      <td>[187, 288, 254, 76, 294, 197, 190, 262, 36, 125, 215, 30, 203, 259, 245, 150, 240, 242, 117, 151]</td>\n    </tr>\n    <tr>\n      <th>Target</th>\n      <td>0</td>\n      <td>2</td>\n      <td>int8</td>\n      <td>1/0</td>\n      <td>1.230000e-01</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>3.284000e-01</td>\n      <td>2.2958</td>\n      <td>[0, 1]</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"#Understanding Test Dataset\nfeature_summary(df_test)","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:23:19.922290Z","iopub.execute_input":"2024-07-10T15:23:19.922673Z","iopub.status.idle":"2024-07-10T15:23:26.812370Z","shell.execute_reply.started":"2024-07-10T15:23:19.922642Z","shell.execute_reply":"2024-07-10T15:23:26.810985Z"},"trusted":true},"execution_count":14,"outputs":[{"name":"stdout","text":"DataFrame shape\nrows: 7669866\ncols: 11\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"         id  Gender  Age  Driving_License  Region_Code  Previously_Insured  \\\n0  11504798       0   20                1         47.0                   0   \n1  11504799       1   47                1         28.0                   0   \n2  11504800       1   47                1         43.0                   0   \n3  11504801       0   22                1         47.0                   1   \n4  11504802       1   51                1         19.0                   0   \n\n   Vehicle_Age  Vehicle_Damage  Annual_Premium  Policy_Sales_Channel  Vintage  \n0            1               0          2630.0                 160.0      228  \n1            0               1         37483.0                 124.0      123  \n2            0               1          2630.0                  26.0      271  \n3            1               0         24502.0                 152.0      115  \n4            0               0         34115.0                 124.0      148  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Driving_License</th>\n      <th>Region_Code</th>\n      <th>Previously_Insured</th>\n      <th>Vehicle_Age</th>\n      <th>Vehicle_Damage</th>\n      <th>Annual_Premium</th>\n      <th>Policy_Sales_Channel</th>\n      <th>Vintage</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>11504798</td>\n      <td>0</td>\n      <td>20</td>\n      <td>1</td>\n      <td>47.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2630.0</td>\n      <td>160.0</td>\n      <td>228</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>11504799</td>\n      <td>1</td>\n      <td>47</td>\n      <td>1</td>\n      <td>28.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>37483.0</td>\n      <td>124.0</td>\n      <td>123</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>11504800</td>\n      <td>1</td>\n      <td>47</td>\n      <td>1</td>\n      <td>43.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2630.0</td>\n      <td>26.0</td>\n      <td>271</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>11504801</td>\n      <td>0</td>\n      <td>22</td>\n      <td>1</td>\n      <td>47.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>24502.0</td>\n      <td>152.0</td>\n      <td>115</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>11504802</td>\n      <td>1</td>\n      <td>51</td>\n      <td>1</td>\n      <td>19.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>34115.0</td>\n      <td>124.0</td>\n      <td>148</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"                      null  unique_count data_type            max/min  \\\nid                       0       7669866     int32  19174663/11504798   \nGender                   0             2      int8                1/0   \nAge                      0            66      int8              85/20   \nDriving_License          0             2      int8                1/0   \nRegion_Code              0            53   float32           52.0/0.0   \nPreviously_Insured       0             2      int8                1/0   \nVehicle_Age              0             3      int8                2/0   \nVehicle_Damage           0             2      int8                1/0   \nAnnual_Premium           0         50044   float32    540165.0/2630.0   \nPolicy_Sales_Channel     0           151   float32          163.0/1.0   \nVintage                  0           290     int16             299/10   \n\n                              mean        median        mode           std  \\\nid                    1.533973e+07  1.533973e+07  11504798.0  2.214100e+06   \nGender                5.413000e-01  1.000000e+00         1.0  4.983000e-01   \nAge                   3.839140e+01  3.600000e+01        24.0  1.499950e+01   \nDriving_License       9.980000e-01  1.000000e+00         1.0  4.440000e-02   \nRegion_Code           2.642660e+01  2.800000e+01        28.0  1.299430e+01   \nPreviously_Insured    4.631000e-01  0.000000e+00         0.0  4.986000e-01   \nVehicle_Age           5.215000e-01  0.000000e+00         0.0  5.769000e-01   \nVehicle_Damage        5.025000e-01  1.000000e+00         1.0  5.000000e-01   \nAnnual_Premium        3.046552e+04  3.182700e+04      2630.0  1.644587e+04   \nPolicy_Sales_Channel  1.123650e+02  1.510000e+02       152.0  5.407360e+01   \nVintage               1.638996e+02  1.660000e+02       187.0  7.998440e+01   \n\n                      skewness  \\\nid                      0.0000   \nGender                 -0.1656   \nAge                     0.6367   \nDriving_License       -22.4112   \nRegion_Code            -0.1312   \nPreviously_Insured      0.1481   \nVehicle_Age             0.5667   \nVehicle_Damage         -0.0102   \nAnnual_Premium          0.7700   \nPolicy_Sales_Channel   -0.9125   \nVintage                -0.1085   \n\n                                                                                                                                                                                                                 sample_values  \nid                    [11504798, 11504799, 11504800, 11504801, 11504802, 11504803, 11504804, 11504805, 11504806, 11504807, 11504808, 11504809, 11504810, 11504811, 11504812, 11504813, 11504814, 11504815, 11504816, 11504817]  \nGender                                                                                                                                                                                                                  [0, 1]  \nAge                                                                                                                                           [20, 47, 22, 51, 23, 21, 72, 33, 67, 34, 25, 24, 45, 65, 40, 35, 26, 41, 66, 31]  \nDriving_License                                                                                                                                                                                                         [1, 0]  \nRegion_Code                                                                                             [47.0, 28.0, 43.0, 19.0, 30.0, 20.0, 37.0, 48.0, 29.0, 11.0, 21.0, 10.0, 0.0, 36.0, 41.0, 45.0, 35.0, 8.0, 40.0, 39.0]  \nPreviously_Insured                                                                                                                                                                                                      [0, 1]  \nVehicle_Age                                                                                                                                                                                                          [1, 0, 2]  \nVehicle_Damage                                                                                                                                                                                                          [0, 1]  \nAnnual_Premium                             [2630.0, 37483.0, 24502.0, 34115.0, 25715.0, 38495.0, 46937.0, 29574.0, 36601.0, 58712.0, 28963.0, 47423.0, 33160.0, 43573.0, 40900.0, 50579.0, 46171.0, 27751.0, 49163.0, 29230.0]  \nPolicy_Sales_Channel                                                                            [160.0, 124.0, 26.0, 152.0, 29.0, 1.0, 122.0, 156.0, 55.0, 25.0, 52.0, 21.0, 153.0, 24.0, 151.0, 4.0, 60.0, 11.0, 163.0, 54.0]  \nVintage                                                                                                                        [228, 123, 271, 115, 148, 245, 11, 171, 97, 72, 225, 102, 36, 292, 250, 152, 278, 55, 193, 106]  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>null</th>\n      <th>unique_count</th>\n      <th>data_type</th>\n      <th>max/min</th>\n      <th>mean</th>\n      <th>median</th>\n      <th>mode</th>\n      <th>std</th>\n      <th>skewness</th>\n      <th>sample_values</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>id</th>\n      <td>0</td>\n      <td>7669866</td>\n      <td>int32</td>\n      <td>19174663/11504798</td>\n      <td>1.533973e+07</td>\n      <td>1.533973e+07</td>\n      <td>11504798.0</td>\n      <td>2.214100e+06</td>\n      <td>0.0000</td>\n      <td>[11504798, 11504799, 11504800, 11504801, 11504802, 11504803, 11504804, 11504805, 11504806, 11504807, 11504808, 11504809, 11504810, 11504811, 11504812, 11504813, 11504814, 11504815, 11504816, 11504817]</td>\n    </tr>\n    <tr>\n      <th>Gender</th>\n      <td>0</td>\n      <td>2</td>\n      <td>int8</td>\n      <td>1/0</td>\n      <td>5.413000e-01</td>\n      <td>1.000000e+00</td>\n      <td>1.0</td>\n      <td>4.983000e-01</td>\n      <td>-0.1656</td>\n      <td>[0, 1]</td>\n    </tr>\n    <tr>\n      <th>Age</th>\n      <td>0</td>\n      <td>66</td>\n      <td>int8</td>\n      <td>85/20</td>\n      <td>3.839140e+01</td>\n      <td>3.600000e+01</td>\n      <td>24.0</td>\n      <td>1.499950e+01</td>\n      <td>0.6367</td>\n      <td>[20, 47, 22, 51, 23, 21, 72, 33, 67, 34, 25, 24, 45, 65, 40, 35, 26, 41, 66, 31]</td>\n    </tr>\n    <tr>\n      <th>Driving_License</th>\n      <td>0</td>\n      <td>2</td>\n      <td>int8</td>\n      <td>1/0</td>\n      <td>9.980000e-01</td>\n      <td>1.000000e+00</td>\n      <td>1.0</td>\n      <td>4.440000e-02</td>\n      <td>-22.4112</td>\n      <td>[1, 0]</td>\n    </tr>\n    <tr>\n      <th>Region_Code</th>\n      <td>0</td>\n      <td>53</td>\n      <td>float32</td>\n      <td>52.0/0.0</td>\n      <td>2.642660e+01</td>\n      <td>2.800000e+01</td>\n      <td>28.0</td>\n      <td>1.299430e+01</td>\n      <td>-0.1312</td>\n      <td>[47.0, 28.0, 43.0, 19.0, 30.0, 20.0, 37.0, 48.0, 29.0, 11.0, 21.0, 10.0, 0.0, 36.0, 41.0, 45.0, 35.0, 8.0, 40.0, 39.0]</td>\n    </tr>\n    <tr>\n      <th>Previously_Insured</th>\n      <td>0</td>\n      <td>2</td>\n      <td>int8</td>\n      <td>1/0</td>\n      <td>4.631000e-01</td>\n      <td>0.000000e+00</td>\n      <td>0.0</td>\n      <td>4.986000e-01</td>\n      <td>0.1481</td>\n      <td>[0, 1]</td>\n    </tr>\n    <tr>\n      <th>Vehicle_Age</th>\n      <td>0</td>\n      <td>3</td>\n      <td>int8</td>\n      <td>2/0</td>\n      <td>5.215000e-01</td>\n      <td>0.000000e+00</td>\n      <td>0.0</td>\n      <td>5.769000e-01</td>\n      <td>0.5667</td>\n      <td>[1, 0, 2]</td>\n    </tr>\n    <tr>\n      <th>Vehicle_Damage</th>\n      <td>0</td>\n      <td>2</td>\n      <td>int8</td>\n      <td>1/0</td>\n      <td>5.025000e-01</td>\n      <td>1.000000e+00</td>\n      <td>1.0</td>\n      <td>5.000000e-01</td>\n      <td>-0.0102</td>\n      <td>[0, 1]</td>\n    </tr>\n    <tr>\n      <th>Annual_Premium</th>\n      <td>0</td>\n      <td>50044</td>\n      <td>float32</td>\n      <td>540165.0/2630.0</td>\n      <td>3.046552e+04</td>\n      <td>3.182700e+04</td>\n      <td>2630.0</td>\n      <td>1.644587e+04</td>\n      <td>0.7700</td>\n      <td>[2630.0, 37483.0, 24502.0, 34115.0, 25715.0, 38495.0, 46937.0, 29574.0, 36601.0, 58712.0, 28963.0, 47423.0, 33160.0, 43573.0, 40900.0, 50579.0, 46171.0, 27751.0, 49163.0, 29230.0]</td>\n    </tr>\n    <tr>\n      <th>Policy_Sales_Channel</th>\n      <td>0</td>\n      <td>151</td>\n      <td>float32</td>\n      <td>163.0/1.0</td>\n      <td>1.123650e+02</td>\n      <td>1.510000e+02</td>\n      <td>152.0</td>\n      <td>5.407360e+01</td>\n      <td>-0.9125</td>\n      <td>[160.0, 124.0, 26.0, 152.0, 29.0, 1.0, 122.0, 156.0, 55.0, 25.0, 52.0, 21.0, 153.0, 24.0, 151.0, 4.0, 60.0, 11.0, 163.0, 54.0]</td>\n    </tr>\n    <tr>\n      <th>Vintage</th>\n      <td>0</td>\n      <td>290</td>\n      <td>int16</td>\n      <td>299/10</td>\n      <td>1.638996e+02</td>\n      <td>1.660000e+02</td>\n      <td>187.0</td>\n      <td>7.998440e+01</td>\n      <td>-0.1085</td>\n      <td>[228, 123, 271, 115, 148, 245, 11, 171, 97, 72, 225, 102, 36, 292, 250, 152, 278, 55, 193, 106]</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df_train_com = df_train.drop('Target', axis=1)\n\nfeature_compare(df_train_com,df_test)","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:23:26.813951Z","iopub.execute_input":"2024-07-10T15:23:26.814348Z","iopub.status.idle":"2024-07-10T15:23:44.515770Z","shell.execute_reply.started":"2024-07-10T15:23:26.814315Z","shell.execute_reply":"2024-07-10T15:23:44.514505Z"},"trusted":true},"execution_count":15,"outputs":[{"name":"stdout","text":"Train DataFrame shape\nrows: 11504798\ncols: 11\nTest DataFrame shape\nrows: 7669866\ncols: 11\n","output_type":"stream"},{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"                              null  unique_count data_type            max/min  \\\nfeatures             dataset                                                    \nid                   train       0      11504798     int32         11504797/0   \n                     test        0       7669866     int32  19174663/11504798   \nGender               train       0             2      int8                1/0   \n                     test        0             2      int8                1/0   \nAge                  train       0            66      int8              85/20   \n                     test        0            66      int8              85/20   \nDriving_License      train       0             2      int8                1/0   \n                     test        0             2      int8                1/0   \nRegion_Code          train       0            54   float32           52.0/0.0   \n                     test        0            53   float32           52.0/0.0   \nPreviously_Insured   train       0             2      int8                1/0   \n                     test        0             2      int8                1/0   \nVehicle_Age          train       0             3      int8                2/0   \n                     test        0             3      int8                2/0   \nVehicle_Damage       train       0             2      int8                1/0   \n                     test        0             2      int8                1/0   \nAnnual_Premium       train       0         51728   float32    540165.0/2630.0   \n                     test        0         50044   float32    540165.0/2630.0   \nPolicy_Sales_Channel train       0           152   float32          163.0/1.0   \n                     test        0           151   float32          163.0/1.0   \nVintage              train       0           290     int16             299/10   \n                     test        0           290     int16             299/10   \n\n                                      mean        median        mode  \\\nfeatures             dataset                                           \nid                   train    5.752398e+06  5.752398e+06         0.0   \n                     test     1.533973e+07  1.533973e+07  11504798.0   \nGender               train    5.414000e-01  1.000000e+00         1.0   \n                     test     5.413000e-01  1.000000e+00         1.0   \nAge                  train    3.838360e+01  3.600000e+01        24.0   \n                     test     3.839140e+01  3.600000e+01        24.0   \nDriving_License      train    9.980000e-01  1.000000e+00         1.0   \n                     test     9.980000e-01  1.000000e+00         1.0   \nRegion_Code          train    2.641870e+01  2.800000e+01        28.0   \n                     test     2.642660e+01  2.800000e+01        28.0   \nPreviously_Insured   train    4.630000e-01  0.000000e+00         0.0   \n                     test     4.631000e-01  0.000000e+00         0.0   \nVehicle_Age          train    5.215000e-01  0.000000e+00         0.0   \n                     test     5.215000e-01  0.000000e+00         0.0   \nVehicle_Damage       train    5.027000e-01  1.000000e+00         1.0   \n                     test     5.025000e-01  1.000000e+00         1.0   \nAnnual_Premium       train    3.046136e+04  3.182400e+04      2630.0   \n                     test     3.046552e+04  3.182700e+04      2630.0   \nPolicy_Sales_Channel train    1.124254e+02  1.510000e+02       152.0   \n                     test     1.123650e+02  1.510000e+02       152.0   \nVintage              train    1.638977e+02  1.660000e+02       187.0   \n                     test     1.638996e+02  1.660000e+02       187.0   \n\n                                       std  skewness  \\\nfeatures             dataset                           \nid                   train    3.321149e+06    0.0000   \n                     test     2.214100e+06    0.0000   \nGender               train    4.983000e-01   -0.1660   \n                     test     4.983000e-01   -0.1656   \nAge                  train    1.499350e+01    0.6373   \n                     test     1.499950e+01    0.6367   \nDriving_License      train    4.440000e-02  -22.4177   \n                     test     4.440000e-02  -22.4112   \nRegion_Code          train    1.299160e+01   -0.1308   \n                     test     1.299430e+01   -0.1312   \nPreviously_Insured   train    4.986000e-01    0.1484   \n                     test     4.986000e-01    0.1481   \nVehicle_Age          train    5.767000e-01    0.5657   \n                     test     5.769000e-01    0.5667   \nVehicle_Damage       train    5.000000e-01   -0.0107   \n                     test     5.000000e-01   -0.0102   \nAnnual_Premium       train    1.645474e+04    0.7769   \n                     test     1.644587e+04    0.7700   \nPolicy_Sales_Channel train    5.403570e+01   -0.9151   \n                     test     5.407360e+01   -0.9125   \nVintage              train    7.997950e+01   -0.1081   \n                     test     7.998440e+01   -0.1085   \n\n                                                                                                                                                                                                    sample_values  \nfeatures             dataset                                                                                                                                                                                       \nid                   train                                                                                                                 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]  \n                     test                                  [11504798, 11504799, 11504800, 11504801, 11504802, 11504803, 11504804, 11504805, 11504806, 11504807, 11504808, 11504809, 11504810, 11504811, 11504812]  \nGender               train                                                                                                                                                                                 [1, 0]  \n                     test                                                                                                                                                                                  [0, 1]  \nAge                  train                                                                                                       [21, 43, 25, 35, 36, 31, 23, 47, 26, 66, 22, 27, 24, 79, 34, 20, 42, 40, 50, 67]  \n                     test                                                                                                                            [20, 47, 22, 51, 23, 21, 72, 33, 67, 34, 25, 24, 45, 65, 40]  \nDriving_License      train                                                                                                                                                                                 [1, 0]  \n                     test                                                                                                                                                                                  [1, 0]  \nRegion_Code          train                                                                  [35.0, 28.0, 14.0, 1.0, 15.0, 47.0, 45.0, 8.0, 11.0, 3.0, 10.0, 12.0, 37.0, 50.0, 30.0, 46.0, 29.0, 16.0, 26.0, 25.0]  \n                     test                                                                                               [47.0, 28.0, 43.0, 19.0, 30.0, 20.0, 37.0, 48.0, 29.0, 11.0, 21.0, 10.0, 0.0, 36.0, 41.0]  \nPreviously_Insured   train                                                                                                                                                                                 [0, 1]  \n                     test                                                                                                                                                                                  [0, 1]  \nVehicle_Age          train                                                                                                                                                                              [0, 2, 1]  \n                     test                                                                                                                                                                               [1, 0, 2]  \nVehicle_Damage       train                                                                                                                                                                                 [1, 0]  \n                     test                                                                                                                                                                                  [0, 1]  \nAnnual_Premium       train    [65101.0, 58911.0, 38043.0, 2630.0, 31951.0, 28150.0, 27128.0, 40659.0, 31639.0, 27996.0, 38104.0, 43746.0, 23692.0, 66887.0, 30226.0, 36389.0, 25769.0, 40797.0, 29698.0, 27677.0]  \n                     test                                                  [2630.0, 37483.0, 24502.0, 34115.0, 25715.0, 38495.0, 46937.0, 29574.0, 36601.0, 58712.0, 28963.0, 47423.0, 33160.0, 43573.0, 40900.0]  \nPolicy_Sales_Channel train                                                      [124.0, 26.0, 152.0, 156.0, 160.0, 8.0, 31.0, 157.0, 60.0, 122.0, 15.0, 30.0, 147.0, 1.0, 63.0, 136.0, 154.0, 18.0, 135.0, 151.0]  \n                     test                                                                                        [160.0, 124.0, 26.0, 152.0, 29.0, 1.0, 122.0, 156.0, 55.0, 25.0, 52.0, 21.0, 153.0, 24.0, 151.0]  \nVintage              train                                                                                      [187, 288, 254, 76, 294, 197, 190, 262, 36, 125, 215, 30, 203, 259, 245, 150, 240, 242, 117, 151]  \n                     test                                                                                                                 [228, 123, 271, 115, 148, 245, 11, 171, 97, 72, 225, 102, 36, 292, 250]  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>null</th>\n      <th>unique_count</th>\n      <th>data_type</th>\n      <th>max/min</th>\n      <th>mean</th>\n      <th>median</th>\n      <th>mode</th>\n      <th>std</th>\n      <th>skewness</th>\n      <th>sample_values</th>\n    </tr>\n    <tr>\n      <th>features</th>\n      <th>dataset</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">id</th>\n      <th>train</th>\n      <td>0</td>\n      <td>11504798</td>\n      <td>int32</td>\n      <td>11504797/0</td>\n      <td>5.752398e+06</td>\n      <td>5.752398e+06</td>\n      <td>0.0</td>\n      <td>3.321149e+06</td>\n      <td>0.0000</td>\n      <td>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0</td>\n      <td>7669866</td>\n      <td>int32</td>\n      <td>19174663/11504798</td>\n      <td>1.533973e+07</td>\n      <td>1.533973e+07</td>\n      <td>11504798.0</td>\n      <td>2.214100e+06</td>\n      <td>0.0000</td>\n      <td>[11504798, 11504799, 11504800, 11504801, 11504802, 11504803, 11504804, 11504805, 11504806, 11504807, 11504808, 11504809, 11504810, 11504811, 11504812]</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Gender</th>\n      <th>train</th>\n      <td>0</td>\n      <td>2</td>\n      <td>int8</td>\n      <td>1/0</td>\n      <td>5.414000e-01</td>\n      <td>1.000000e+00</td>\n      <td>1.0</td>\n      <td>4.983000e-01</td>\n      <td>-0.1660</td>\n      <td>[1, 0]</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0</td>\n      <td>2</td>\n      <td>int8</td>\n      <td>1/0</td>\n      <td>5.413000e-01</td>\n      <td>1.000000e+00</td>\n      <td>1.0</td>\n      <td>4.983000e-01</td>\n      <td>-0.1656</td>\n      <td>[0, 1]</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Age</th>\n      <th>train</th>\n      <td>0</td>\n      <td>66</td>\n      <td>int8</td>\n      <td>85/20</td>\n      <td>3.838360e+01</td>\n      <td>3.600000e+01</td>\n      <td>24.0</td>\n      <td>1.499350e+01</td>\n      <td>0.6373</td>\n      <td>[21, 43, 25, 35, 36, 31, 23, 47, 26, 66, 22, 27, 24, 79, 34, 20, 42, 40, 50, 67]</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0</td>\n      <td>66</td>\n      <td>int8</td>\n      <td>85/20</td>\n      <td>3.839140e+01</td>\n      <td>3.600000e+01</td>\n      <td>24.0</td>\n      <td>1.499950e+01</td>\n      <td>0.6367</td>\n      <td>[20, 47, 22, 51, 23, 21, 72, 33, 67, 34, 25, 24, 45, 65, 40]</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Driving_License</th>\n      <th>train</th>\n      <td>0</td>\n      <td>2</td>\n      <td>int8</td>\n      <td>1/0</td>\n      <td>9.980000e-01</td>\n      <td>1.000000e+00</td>\n      <td>1.0</td>\n      <td>4.440000e-02</td>\n      <td>-22.4177</td>\n      <td>[1, 0]</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0</td>\n      <td>2</td>\n      <td>int8</td>\n      <td>1/0</td>\n      <td>9.980000e-01</td>\n      <td>1.000000e+00</td>\n      <td>1.0</td>\n      <td>4.440000e-02</td>\n      <td>-22.4112</td>\n      <td>[1, 0]</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Region_Code</th>\n      <th>train</th>\n      <td>0</td>\n      <td>54</td>\n      <td>float32</td>\n      <td>52.0/0.0</td>\n      <td>2.641870e+01</td>\n      <td>2.800000e+01</td>\n      <td>28.0</td>\n      <td>1.299160e+01</td>\n      <td>-0.1308</td>\n      <td>[35.0, 28.0, 14.0, 1.0, 15.0, 47.0, 45.0, 8.0, 11.0, 3.0, 10.0, 12.0, 37.0, 50.0, 30.0, 46.0, 29.0, 16.0, 26.0, 25.0]</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0</td>\n      <td>53</td>\n      <td>float32</td>\n      <td>52.0/0.0</td>\n      <td>2.642660e+01</td>\n      <td>2.800000e+01</td>\n      <td>28.0</td>\n      <td>1.299430e+01</td>\n      <td>-0.1312</td>\n      <td>[47.0, 28.0, 43.0, 19.0, 30.0, 20.0, 37.0, 48.0, 29.0, 11.0, 21.0, 10.0, 0.0, 36.0, 41.0]</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Previously_Insured</th>\n      <th>train</th>\n      <td>0</td>\n      <td>2</td>\n      <td>int8</td>\n      <td>1/0</td>\n      <td>4.630000e-01</td>\n      <td>0.000000e+00</td>\n      <td>0.0</td>\n      <td>4.986000e-01</td>\n      <td>0.1484</td>\n      <td>[0, 1]</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0</td>\n      <td>2</td>\n      <td>int8</td>\n      <td>1/0</td>\n      <td>4.631000e-01</td>\n      <td>0.000000e+00</td>\n      <td>0.0</td>\n      <td>4.986000e-01</td>\n      <td>0.1481</td>\n      <td>[0, 1]</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Vehicle_Age</th>\n      <th>train</th>\n      <td>0</td>\n      <td>3</td>\n      <td>int8</td>\n      <td>2/0</td>\n      <td>5.215000e-01</td>\n      <td>0.000000e+00</td>\n      <td>0.0</td>\n      <td>5.767000e-01</td>\n      <td>0.5657</td>\n      <td>[0, 2, 1]</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0</td>\n      <td>3</td>\n      <td>int8</td>\n      <td>2/0</td>\n      <td>5.215000e-01</td>\n      <td>0.000000e+00</td>\n      <td>0.0</td>\n      <td>5.769000e-01</td>\n      <td>0.5667</td>\n      <td>[1, 0, 2]</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Vehicle_Damage</th>\n      <th>train</th>\n      <td>0</td>\n      <td>2</td>\n      <td>int8</td>\n      <td>1/0</td>\n      <td>5.027000e-01</td>\n      <td>1.000000e+00</td>\n      <td>1.0</td>\n      <td>5.000000e-01</td>\n      <td>-0.0107</td>\n      <td>[1, 0]</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0</td>\n      <td>2</td>\n      <td>int8</td>\n      <td>1/0</td>\n      <td>5.025000e-01</td>\n      <td>1.000000e+00</td>\n      <td>1.0</td>\n      <td>5.000000e-01</td>\n      <td>-0.0102</td>\n      <td>[0, 1]</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Annual_Premium</th>\n      <th>train</th>\n      <td>0</td>\n      <td>51728</td>\n      <td>float32</td>\n      <td>540165.0/2630.0</td>\n      <td>3.046136e+04</td>\n      <td>3.182400e+04</td>\n      <td>2630.0</td>\n      <td>1.645474e+04</td>\n      <td>0.7769</td>\n      <td>[65101.0, 58911.0, 38043.0, 2630.0, 31951.0, 28150.0, 27128.0, 40659.0, 31639.0, 27996.0, 38104.0, 43746.0, 23692.0, 66887.0, 30226.0, 36389.0, 25769.0, 40797.0, 29698.0, 27677.0]</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0</td>\n      <td>50044</td>\n      <td>float32</td>\n      <td>540165.0/2630.0</td>\n      <td>3.046552e+04</td>\n      <td>3.182700e+04</td>\n      <td>2630.0</td>\n      <td>1.644587e+04</td>\n      <td>0.7700</td>\n      <td>[2630.0, 37483.0, 24502.0, 34115.0, 25715.0, 38495.0, 46937.0, 29574.0, 36601.0, 58712.0, 28963.0, 47423.0, 33160.0, 43573.0, 40900.0]</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Policy_Sales_Channel</th>\n      <th>train</th>\n      <td>0</td>\n      <td>152</td>\n      <td>float32</td>\n      <td>163.0/1.0</td>\n      <td>1.124254e+02</td>\n      <td>1.510000e+02</td>\n      <td>152.0</td>\n      <td>5.403570e+01</td>\n      <td>-0.9151</td>\n      <td>[124.0, 26.0, 152.0, 156.0, 160.0, 8.0, 31.0, 157.0, 60.0, 122.0, 15.0, 30.0, 147.0, 1.0, 63.0, 136.0, 154.0, 18.0, 135.0, 151.0]</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0</td>\n      <td>151</td>\n      <td>float32</td>\n      <td>163.0/1.0</td>\n      <td>1.123650e+02</td>\n      <td>1.510000e+02</td>\n      <td>152.0</td>\n      <td>5.407360e+01</td>\n      <td>-0.9125</td>\n      <td>[160.0, 124.0, 26.0, 152.0, 29.0, 1.0, 122.0, 156.0, 55.0, 25.0, 52.0, 21.0, 153.0, 24.0, 151.0]</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Vintage</th>\n      <th>train</th>\n      <td>0</td>\n      <td>290</td>\n      <td>int16</td>\n      <td>299/10</td>\n      <td>1.638977e+02</td>\n      <td>1.660000e+02</td>\n      <td>187.0</td>\n      <td>7.997950e+01</td>\n      <td>-0.1081</td>\n      <td>[187, 288, 254, 76, 294, 197, 190, 262, 36, 125, 215, 30, 203, 259, 245, 150, 240, 242, 117, 151]</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0</td>\n      <td>290</td>\n      <td>int16</td>\n      <td>299/10</td>\n      <td>1.638996e+02</td>\n      <td>1.660000e+02</td>\n      <td>187.0</td>\n      <td>7.998440e+01</td>\n      <td>-0.1085</td>\n      <td>[228, 123, 271, 115, 148, 245, 11, 171, 97, 72, 225, 102, 36, 292, 250]</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"%time\n##TARGET FEATURE DISTRIBUTION\ndf=df_train[['id','Target']].groupby('Target').count().reset_index().sort_values(by='Target')\ndf.columns=['Target','Observation Count']\n\n# df['Target_Desc']=df['Target']\n#CREATING VISUALIZATION\nfig=px.pie(df,names='Target',values='Observation Count',color='Target',hole=0.7,\n           color_discrete_sequence=px.colors.qualitative.Plotly,width=600,height=600)\n           \n\nfig.update_layout(\n                    {'paper_bgcolor':'#FEFBF3'},\n                    title={\n                        'text': \"Target\",\n                        'x':0.5,\n                        'font_color':\"red\"},\n    \n                    font_color=\"blue\",\n                    legend_title=\"Target\",\n                    legend_title_font_color=\"green\",\n                    legend=dict(\n                                yanchor=\"top\",\n                                y=0.99,\n                                xanchor=\"right\",\n                                x=0.05\n                                )\n\n                )\n\n\nfig.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:23:44.517368Z","iopub.execute_input":"2024-07-10T15:23:44.517752Z","iopub.status.idle":"2024-07-10T15:23:47.317094Z","shell.execute_reply.started":"2024-07-10T15:23:44.517719Z","shell.execute_reply":"2024-07-10T15:23:47.315931Z"},"trusted":true},"execution_count":16,"outputs":[{"name":"stdout","text":"CPU times: user 3 µs, sys: 0 ns, total: 3 µs\nWall time: 7.39 µs\n","output_type":"stream"},{"output_type":"display_data","data":{"text/html":"        <script type=\"text/javascript\">\n        window.PlotlyConfig = {MathJaxConfig: 'local'};\n        if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n        if (typeof require !== 'undefined') {\n        require.undef(\"plotly\");\n        requirejs.config({\n            paths: {\n                'plotly': ['https://cdn.plot.ly/plotly-2.27.0.min']\n            }\n        });\n        require(['plotly'], function(Plotly) {\n            window._Plotly = Plotly;\n        });\n        }\n        </script>\n        "},"metadata":{}},{"output_type":"display_data","data":{"text/html":"<div>                            <div id=\"552fe906-c8c6-4c2f-8bdc-0efd30859e2c\" class=\"plotly-graph-div\" style=\"height:600px; width:600px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"552fe906-c8c6-4c2f-8bdc-0efd30859e2c\")) {                    Plotly.newPlot(                        \"552fe906-c8c6-4c2f-8bdc-0efd30859e2c\",                        [{\"customdata\":[[0],[1]],\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"hole\":0.7,\"hovertemplate\":\"Target=%{customdata[0]}\\u003cbr\\u003eObservation Count=%{value}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"labels\":[0,1],\"legendgroup\":\"\",\"marker\":{\"colors\":[\"#636EFA\",\"#EF553B\"]},\"name\":\"\",\"showlegend\":true,\"values\":[10089739,1415059],\"type\":\"pie\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"legend\":{\"tracegroupgap\":0,\"title\":{\"text\":\"Target\",\"font\":{\"color\":\"green\"}},\"yanchor\":\"top\",\"y\":0.99,\"xanchor\":\"right\",\"x\":0.05},\"margin\":{\"t\":60},\"piecolorway\":[\"#636EFA\",\"#EF553B\",\"#00CC96\",\"#AB63FA\",\"#FFA15A\",\"#19D3F3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"height\":600,\"width\":600,\"title\":{\"font\":{\"color\":\"red\"},\"text\":\"Target\",\"x\":0.5},\"font\":{\"color\":\"blue\"},\"paper_bgcolor\":\"#FEFBF3\"},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('552fe906-c8c6-4c2f-8bdc-0efd30859e2c');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"},"metadata":{}}]},{"cell_type":"code","source":"%%time\n##VISUALIZING TRAIN AND TEST FEATURE DISTRIBUTION\nplt.figure()\nfig, ax = plt.subplots(9,4 ,figsize=(20,20))\n\nfor i,feature in enumerate(df_train.columns[1:-1]):\n    plt.subplot(9, 4,i+1)\n    sns.kdeplot(data=df_train[feature],x=df_train[feature],color='red', label='train')\n    plt.axvline(x=df_train[feature].mean(),color='yellow',linestyle='--',label='train mean')\n    sns.kdeplot(df_test[feature],x=df_test[feature],color='grey',label='test')\n    plt.axvline(x=df_test[feature].mean(),color='orange',linestyle='--',label='test mean')\n    plt.xlabel(feature,color='blue')\n\n    plt.legend(loc=1,fontsize='x-small')\n    \nfig.tight_layout(pad=2.0)    \nplt.show();","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:23:47.318662Z","iopub.execute_input":"2024-07-10T15:23:47.319116Z","iopub.status.idle":"2024-07-10T15:38:04.403229Z","shell.execute_reply.started":"2024-07-10T15:23:47.319080Z","shell.execute_reply":"2024-07-10T15:38:04.401765Z"},"trusted":true},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 0 Axes>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 2000x2000 with 36 Axes>","image/png":""},"metadata":{}},{"name":"stdout","text":"CPU times: user 14min 13s, sys: 25.8 s, total: 14min 38s\nWall time: 14min 17s\n","output_type":"stream"}]},{"cell_type":"code","source":"##Identifying categorical and continuous features.\ndf_dtype=pd.DataFrame()\ndf_dtype['cols']=df_train.columns[1:-1]\ndf_dtype['data_type']=list([df_train[col].dtype for col in df_train.columns[1:-1]])\ndf_dtype['unique_val']=list([len(df_train[col].unique()) for col in df_train.columns[1:-1]])\ndf_dtype['val_type']=list(['conti' if x=='float32' else 'categ' for x in df_dtype['data_type']])\n\n\ndf_dtype.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:38:04.405729Z","iopub.execute_input":"2024-07-10T15:38:04.406118Z","iopub.status.idle":"2024-07-10T15:38:05.244954Z","shell.execute_reply.started":"2024-07-10T15:38:04.406082Z","shell.execute_reply":"2024-07-10T15:38:05.243622Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"                   cols data_type  unique_val val_type\n0                Gender      int8           2    categ\n1                   Age      int8          66    categ\n2       Driving_License      int8           2    categ\n3           Region_Code   float32          54    conti\n4    Previously_Insured      int8           2    categ\n5           Vehicle_Age      int8           3    categ\n6        Vehicle_Damage      int8           2    categ\n7        Annual_Premium   float32       51728    conti\n8  Policy_Sales_Channel   float32         152    conti\n9               Vintage     int16         290    categ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cols</th>\n      <th>data_type</th>\n      <th>unique_val</th>\n      <th>val_type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Gender</td>\n      <td>int8</td>\n      <td>2</td>\n      <td>categ</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Age</td>\n      <td>int8</td>\n      <td>66</td>\n      <td>categ</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Driving_License</td>\n      <td>int8</td>\n      <td>2</td>\n      <td>categ</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Region_Code</td>\n      <td>float32</td>\n      <td>54</td>\n      <td>conti</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Previously_Insured</td>\n      <td>int8</td>\n      <td>2</td>\n      <td>categ</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Vehicle_Age</td>\n      <td>int8</td>\n      <td>3</td>\n      <td>categ</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Vehicle_Damage</td>\n      <td>int8</td>\n      <td>2</td>\n      <td>categ</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Annual_Premium</td>\n      <td>float32</td>\n      <td>51728</td>\n      <td>conti</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Policy_Sales_Channel</td>\n      <td>float32</td>\n      <td>152</td>\n      <td>conti</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Vintage</td>\n      <td>int16</td>\n      <td>290</td>\n      <td>categ</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"##Identifying categorical features with categories less than equal to 10\ncateg_cols10=df_dtype['cols'][(df_dtype.val_type=='categ') & (df_dtype.unique_val<=10)]\ndisplay(df_dtype[(df_dtype.val_type=='categ') & (df_dtype.unique_val<=10)])\nprint('Categorical Features <= 10 unique categoris:',len(categ_cols10))","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:38:05.246708Z","iopub.execute_input":"2024-07-10T15:38:05.247133Z","iopub.status.idle":"2024-07-10T15:38:05.267632Z","shell.execute_reply.started":"2024-07-10T15:38:05.247099Z","shell.execute_reply":"2024-07-10T15:38:05.266059Z"},"trusted":true},"execution_count":19,"outputs":[{"output_type":"display_data","data":{"text/plain":"                 cols data_type  unique_val val_type\n0              Gender      int8           2    categ\n2     Driving_License      int8           2    categ\n4  Previously_Insured      int8           2    categ\n5         Vehicle_Age      int8           3    categ\n6      Vehicle_Damage      int8           2    categ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cols</th>\n      <th>data_type</th>\n      <th>unique_val</th>\n      <th>val_type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Gender</td>\n      <td>int8</td>\n      <td>2</td>\n      <td>categ</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Driving_License</td>\n      <td>int8</td>\n      <td>2</td>\n      <td>categ</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Previously_Insured</td>\n      <td>int8</td>\n      <td>2</td>\n      <td>categ</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Vehicle_Age</td>\n      <td>int8</td>\n      <td>3</td>\n      <td>categ</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Vehicle_Damage</td>\n      <td>int8</td>\n      <td>2</td>\n      <td>categ</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"name":"stdout","text":"Categorical Features <= 10 unique categoris: 5\n","output_type":"stream"}]},{"cell_type":"code","source":"plt.figure()\nfig, ax = plt.subplots(3,4 ,figsize=(20,15))\nsns.set_style(\"darkgrid\", {\"grid.color\": \".6\", \"grid.linestyle\": \":\"})\nfor i,feature in enumerate(categ_cols10):\n    plt.subplot(3, 4,i+1)\n    df=df_train[['id',feature,'Target']].groupby([feature,'Target']).count().reset_index()\n    df.columns=[feature,'Target','count']\n    sns.barplot(data=df,x=df[feature],y=df['count'],hue='Target')\n    \n# fig.tight_layout(pad=2.0)    \nplt.show();","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:38:05.269383Z","iopub.execute_input":"2024-07-10T15:38:05.269796Z","iopub.status.idle":"2024-07-10T15:38:10.881331Z","shell.execute_reply.started":"2024-07-10T15:38:05.269757Z","shell.execute_reply":"2024-07-10T15:38:10.879285Z"},"trusted":true},"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 0 Axes>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 2000x1500 with 12 Axes>","image/png":"iVBORw0KGgoAAAANSUhEUgAABlMAAAS9CAYAAADTBq+iAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAADI9klEQVR4nOzde5hVdb0/8PeeAQZUwBS5Kd4VryCiIhrmhY5XkvplZpSKaOmB0sgb5fWUoZVmpzxqGpileSmx8pZKoeYllcRL3hWDVERUQFAHnNm/P8zJEdgC7pk9w7xez7OfZ/baa+31WXtm9nu+89nruwrFYrEYAAAAAAAAlqqq0gUAAAAAAAC0ZJopAAAAAAAAJWimAAAAAAAAlKCZAgAAAAAAUIJmCgAAAAAAQAmaKQAAAAAAACVopgAAAAAAAJSgmQIAAAAAAFCCZgoAAAAAAEAJmikAAAAAAAAlrDLNlDvvvDPDhg1L7969UygUcv3116/wcxSLxfzoRz/K5ptvnpqamqy77ro566yzyl8sAC3Wx82TM844I4VCYYnb6quv3jQFA9AiGZ8AUC4yBaBlaFfpAspl4cKF6d+/f4444oh87nOfW6nnOPbYY3PrrbfmRz/6Ubbddtu8/vrref3118tcKQAt2cfNk+OPPz5HH310o2V77bVXdtxxx3KVCEArYHwCQLnIFICWoVAsFouVLqLcCoVCJk2alOHDhzcsq62tzXe+85385je/ydy5c7PNNtvknHPOye67754keeKJJ9KvX7889thj6du3b2UKB6BFWZk8+bCHH3442223Xe68884MGTKkeQoHoEUxPgGgXGQKQOWsMtN8fZQxY8bk3nvvzVVXXZVHHnkkBx10UPbZZ58888wzSZI//vGP2XjjjXPDDTdko402yoYbbpgjjzxSlx6ARj4qTz7s0ksvzeabb66RAkAjxicAlItMAWgebaKZMmPGjEycODHXXntthgwZkk022STHH398PvnJT2bixIlJkueffz7//Oc/c+211+byyy/PZZddlqlTp+bzn/98hasHoKVYnjz5oHfeeSdXXHFFRo0aVYFqAWipjE8AKBeZAtB8VplrppTy6KOPpq6uLptvvnmj5bW1tVl77bWTJPX19amtrc3ll1/esN4vfvGLDBw4ME899ZTTIAFYrjz5oEmTJuXNN9/MYYcd1lwlAtAKGJ8AUC4yBaD5tIlmyoIFC1JdXZ2pU6emurq60WNrrLFGkqRXr15p165do/DZcsstk7zX5RcsACxPnnzQpZdemgMOOCA9evRorhIBaAWMTwAoF5kC0HzaRDNlwIABqaury+zZs5c5Z/2uu+6ad999N88991w22WSTJMnTTz+dJNlggw2arVYAWq7lyZP3TZ8+PX/5y1/yhz/8oZmqA6C1MD4BoFxkCkDzKRSLxWKliyiHBQsW5Nlnn03yXpCcd9552WOPPbLWWmtl/fXXz5e//OXcfffdOffcczNgwIC8+uqrmTx5cvr165f9998/9fX12XHHHbPGGmvk/PPPT319fUaPHp0uXbrk1ltvrfDRAdBcPm6evO/UU0/NhAkTMmPGjCU+IQbAqs/4BIBykSkALcMq00yZMmVK9thjjyWWH3bYYbnsssuyePHifO9738vll1+eF198Md26dcvOO++cM888M9tuu22S5KWXXsrXv/713HrrrVl99dWz77775txzz81aa63V3IcDQIWUI0/q6+uzwQYb5NBDD81ZZ53V3IcAQAtgfAJAucgUgJZhlWmmAAAAAAAANIWqShcAAAAAAADQkrXqC9DX19fnpZdeSufOnVMoFCpdDkCrUiwW8+abb6Z3796pqtJblykAK0eeNCZPAFaeTPkPeQKw8poqT1p1M+Wll15Knz59Kl0GQKs2c+bMrLfeepUuo+JkCsDHI0/eI08APj6ZIk8AyqHcedKqmymdO3dO8t6L0qVLlwpXA9C6zJ8/P3369Gl4L23rZArAypEnjckTgJUnU/5DngCsvKbKk1bdTHn/NMcuXboIFoCV5JTx98gUgI9HnrxHngB8fDJFngCUQ7nzpG1PQAkAAAAAAPARNFMAAAAAAABK0EwBAAAAAAAooVVfMwXg46qrq8vixYsrXUaTaN++faqrqytdBkCbUF9fn0WLFlW6jCYjUwCajzEKAOUgT8pPMwVok4rFYl5++eXMnTs3xWKlq2kahUKy5pprplevXi7gCNCEFi1alOeffz51dfWVLqXJyBSApmeMAkA5yJOmo5kCtEkvv/xy3nhjbjp3XjM1NTVJVrU/5Iupra3NG2/MTZL07t27suUArKKKxWJeeumlFIuFrL12j1X0H0MyBaA5GKOsWs4444yceeaZjZb17ds3Tz75ZIUqAtoKedJ0NFOANqeuri5z574XKp07d610OU2mQ4eOSZK5c+emR48eTqcHaALvvvtuFi58K2uuuXZqajpWupwmI1MAmpYxyqpp6623zu23395wv107/4YDmpY8aVrexYE2Z/HixSkW8+/u/KqtpqYmb7753jGv6gMVgEqoq6tLkrRr177ClTQ9mQLQdIxRVk3t2rVLz549l2vd2tra1NbWNtyfP39+U5UFrMLkSdOqapa9ALRIq9ppjkvTFo4RgOYhUwCaXlt4r20Lx/ieZ555Jr17987GG2+cESNGZMaMGctcd/z48enatWvDrU+fPs1YKbDqaQvvtc1/jJopAAAAAFBGgwYNymWXXZZbbrklF154YaZPn54hQ4bkzTffXOr648aNy7x58xpuM2fObOaKAfgopvkCAAAAgDLad999G77u169fBg0alA022CDXXHNNRo0atcT6NTU1bWJaHoDWzJkpAAAAANCE1lxzzWy++eZ59tlnK10KACvJmSkAS7HzztuXfHzUqK/mqKOObqZqGtt55+1zzjnn5lOf2qMi+29qd955Z374wx9m6tSpefnllzNp0qQMHz685DZTpkzJ2LFj849//CN9+vTJKaecksMPP7xZ6gUoRZ4AUC4ypXVbsGBBnnvuuXzlK1+pdClAGydPVp5mCrRwdfX1qa5yEtn7muv1uPHGWxu+vv32W/Pzn1+Ua665rmFZp06rrdDzLV68OO3bty9bfauyhQsXpn///jniiCPyuc997iPXnz59evbff/8cffTRueKKKzJ58uQceeSR6dWrV/bee+9mqBhaD5nyH/IEYOXJk8ZkCktz/PHHZ9iwYdlggw3y0ksv5fTTT091dXUOOeSQJtlfa/y9bI01w6pAnqw8zRRo4aqrqnLKlXdl+ux5lS6l4jbq3jXf+9KQZtnX2mt3a/h69dXXSKHwn2X/+tfMnH32WXnssUfzzjtvZ8MNN8oxx3w9O+00qGGb4cP3z2c+MzwzZ87IHXdMye6775nTTjsz119/XSZMuCTz5s3LzjsPTv/+AzJhws9z++13Nmx7551TcumlP88LLzyfbt3WyX77HZDDDx+Vdu3aZfjw/ZMkJ530rSRJz569cv31NzbHS9Js9t1330bzC3+Uiy66KBtttFHOPffcJMmWW26Zv/71r/nxj3+smQIfIlPeI0/aRp4ATUee/IdMkSnL8q9//SuHHHJIXnvttayzzjr55Cc/mfvuuy/rrLNOk+yvtf1eNufvDtCYPFl5minQCkyfPS9Pvvh6pcvg395+++3sssuuOfro0WnfvkNuvvmGnHDCcbn66uvSs2evhvWuuOJXOeKIozJq1FeTJA8/PC0/+MH3M3r0NzJkyKdy//1/y89/fmGj55427e8588zTMnbsCdluuwH517/+lbPP/l6S5Mgjv5aJE3+dfffdK6ecckYGD94lVVXVzXfgLdS9996boUOHNlq2995757jjjiu5XW1tbWpraxvuz58/vynKgxZHprQc8gRozeRJyyJTWp6rrrqq2ffp9xL4uORJac6lA1hBm222eT772c9nk002zfrrr5+vfe2/s+666+Wuu+5otN4OO+yYESO+kvXW65P11uuTa6+9KoMH75IRIw7N+utvkM9//gsZPHiXRttceunPc+ihh2f//Ydl3XXXy6BBO+erXz0m11//uyTJJz7xiSRJ586ds/ba3Rrut2WzZs1Kjx49Gi3r0aNH5s+fn7fffnuZ240fPz5du3ZtuPXp06epSwVoRJ4AUC4yBYBykCelOTMFYAW99dZbufTSi3P33XfltdfmpK6uLrW1tZk1a1aj9bbYYstG92fM+OcSF9DaaqttcvfddzXcf/bZp/Poow/nsst+0bCsvr4+tbW1eeedt9OxY6cmOKK2ady4cRk7dmzD/fnz52uoAM1KngBQLjIFgHKQJ6VppgCsoJ/+9Me5//6/5etfPy7rrdcnNTU1+fa3T8y77y5utF6nTiseAm+//XaOPPJr2X33PZd4rEOHmpWueVXWs2fPvPLKK42WvfLKK+nSpUvJ70FNTU1qarymQOXIEwDKRaYAUA7ypDTNFIAV9MgjD2f//Yc1vPm/9dZbefnll5IMLLnd+utvkMcf/0ejZU880fj+5ptvkRkz/pk+fdZf5vO0a9cudXX1K1f8Kmjw4MG56aabGi277bbbMnjw4ApVBLB85AkA5SJToPWrq69PdVXruiJDa6yZ0uRJaZopACtovfX6ZMqUP+eTn9wthUIhF1/8f6mvL37kdgcd9MUcc8yRufLKX+eTn9wtU6fen3vvvSeFQqFhnVGjjsq3vnVcevTomT33HJpCoZBnn30mzz33bI4+enSSpFev3nnwwfvTv3//tG/fIV26dGmyY62EBQsW5Nlnn224P3369EybNi1r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e6XS5TQZmQLQ9IxRVk0PPPBALr744vTr16/SpQBthDxpOpopQJv0/j+/evTokcWLV82pWdq3b9+mPu0FUCkdOnTI5ptvnkWLFlW6lCYjUwCanjHKqmfBggUZMWJELrnkknzve9+rdDlAGyFPmo5mCtCmVVdXt6k/5gFoGlVVVenYsWOlywBgFWCMsuoYPXp09t9//wwdOvQjmym1tbWNrnEwf/78pi4PWMXJk/LTTAEAAACAMrrqqqvy97//PQ888MByrT9+/PiceeaZTVwVAB9HVaULAAAAAIBVxcyZM3PsscfmiiuuWO4zV8eNG5d58+Y13GbOnNnEVQKwojRTAGiRLrjggmy44Ybp2LFjBg0alPvvv7/k+ueff3769u2bTp06pU+fPvnmN7+Zd955p5mqBQAAeM/UqVMze/bsbL/99mnXrl3atWuXO+64I//7v/+bdu3apa6uboltampq0qVLl0Y3AFoW03wB0OJcffXVGTt2bC666KIMGjQo559/fvbee+889dRT6d69+xLrX3nllTn55JMzYcKE7LLLLnn66adz+OGHp1Ao5LzzzqvAEQAAAG3VXnvtlUcffbTRspEjR2aLLbbISSed5BoGAK2UZgoALc55552Xo446KiNHjkySXHTRRbnxxhszYcKEnHzyyUusf88992TXXXfNl770pSTJhhtumEMOOSR/+9vfmrVuAACAzp07Z5tttmm0bPXVV8/aa6+9xHIAWg/TfAHQoixatChTp07N0KFDG5ZVVVVl6NChuffee5e6zS677JKpU6c2TAX2/PPP56abbsp+++23zP3U1tZm/vz5jW4AAAAAsDTOTAGgRZkzZ07q6urSo0ePRst79OiRJ598cqnbfOlLX8qcOXPyyU9+MsViMe+++26OPvrofPvb317mfsaPH58zzzyzrLUDAAAszZQpUypdAgAfkzNTAGj1pkyZku9///v5v//7v/z973/PddddlxtvvDHf/e53l7nNuHHjMm/evIbbzJkzm7FiAAAAAFoTZ6YA0KJ069Yt1dXVeeWVVxotf+WVV9KzZ8+lbnPqqafmK1/5So488sgkybbbbpuFCxfmq1/9ar7zne+kqmrJzw7U1NSkpqam/AcAAAAAwCrHmSkAtCgdOnTIwIEDM3ny5IZl9fX1mTx5cgYPHrzUbd56660lGibV1dVJkmKx2HTFAgAAANAmODMFgBZn7NixOeyww7LDDjtkp512yvnnn5+FCxdm5MiRSZJDDz006667bsaPH58kGTZsWM4777wMGDAggwYNyrPPPptTTz01w4YNa2iqAAAAAMDK0kwBoMU5+OCD8+qrr+a0007LrFmzst122+WWW25puCj9jBkzGp2Jcsopp6RQKOSUU07Jiy++mHXWWSfDhg3LWWedValDAAAAAGAVopkCQIs0ZsyYjBkzZqmPTZkypdH9du3a5fTTT8/pp5/eDJUBAAAA0Na4ZgoAAAAAAEAJmikAAAAAAAAlaKYAAAAAAACUoJkCAACwFGeffXYKhUKOO+64SpcCAABUmGYKAADAhzzwwAO5+OKL069fv0qXAgAAtAAtppniU18AAEBLsGDBgowYMSKXXHJJPvGJT1S6HAAAoAVoEc0Un/oCAABaitGjR2f//ffP0KFDP3Ld2trazJ8/v9ENAABY9VS8mbIin/oyUAEAAJrSVVddlb///e8ZP378cq0/fvz4dO3ateHWp0+fJq4QAACohIo3U1bkU18GKgAAQFOZOXNmjj322FxxxRXp2LHjcm0zbty4zJs3r+E2c+bMJq4SAACohHaV3Pn7n/p64IEHlmv9cePGZezYsQ3358+fr6ECAACUxdSpUzN79uxsv/32Dcvq6upy55135mc/+1lqa2tTXV3daJuamprU1NQ0d6kAAEAzq1gz5f1Pfd12223L/akvAxUAAKCp7LXXXnn00UcbLRs5cmS22GKLnHTSSUs0UgAAgLajYs2UlfnUFwAAQFPp3Llzttlmm0bLVl999ay99tpLLAcAANqWijVTfOoLAAAAAABoDSrWTPGpLwAAoKWbMmVKpUsAAABagKpKFwAAAAAAANCSVezMlKXxqS8AAAAAAKClcWYKAAAAAABACZopAAAAAAAAJWimAAAAAAAAlKCZAgAAAAAAUIJmCgAAAAAAQAmaKQAAAAAAACVopgAAAAAAAJSgmQIAAAAAAFCCZgoAAAAAAEAJmikAAAAAAAAlaKYAAAAAAACUoJkCAAAAAABQgmYKAAAAAABACZopAAAAAAAAJWimAAAAAAAAlKCZAgAAAAAAUIJmCgAAAAAAQAmaKQAAAAAAACVopgAAAAAAAJSgmQIAAAAAAFCCZgoAAAAAAEAJmikAAAAAAAAlaKYAAAAAAACUoJkCAAAAAABQgmYKAAAAAABACZopAAAAAAAAJWimAAAAAAAAlKCZAgAAAAAAUIJmCgAAAAAAQAmaKQAAAAAAACVopgAAAAAAAJSgmQIAAAAAAFCCZgoAAAAAAEAJmikAAAAAUEYXXnhh+vXrly5duqRLly4ZPHhwbr755kqXBcDHoJkCAAAAAGW03nrr5eyzz87UqVPz4IMPZs8998yBBx6Yf/zjH5UuDYCV1K7SBQAAAADAqmTYsGGN7p911lm58MILc99992XrrbeuUFUAfByaKQAAAADQROrq6nLttddm4cKFGTx48FLXqa2tTW1tbcP9+fPnN1d5ACwn03wBAAAAQJk9+uijWWONNVJTU5Ojjz46kyZNylZbbbXUdcePH5+uXbs23Pr06dPM1QLwUTRTAGiRLrjggmy44Ybp2LFjBg0alPvvv7/k+nPnzs3o0aPTq1ev1NTUZPPNN89NN93UTNUCAAA01rdv30ybNi1/+9vfcswxx+Swww7L448/vtR1x40bl3nz5jXcZs6c2czVAvBRTPMFQItz9dVXZ+zYsbnooosyaNCgnH/++dl7773z1FNPpXv37kusv2jRonz6059O9+7d89vf/jbrrrtu/vnPf2bNNdds/uIBAACSdOjQIZtuummSZODAgXnggQfyk5/8JBdffPES69bU1KSmpqa5SwRgBWimANDinHfeeTnqqKMycuTIJMlFF12UG2+8MRMmTMjJJ5+8xPoTJkzI66+/nnvuuSft27dPkmy44YYl92FOYgAAoDnV19c3GoMA0LqY5guAFmXRokWZOnVqhg4d2rCsqqoqQ4cOzb333rvUbf7whz9k8ODBGT16dHr06JFtttkm3//+91NXV7fM/ZiTGAAAaCrjxo3LnXfemRdeeCGPPvpoxo0blylTpmTEiBGVLg2AlaSZAkCLMmfOnNTV1aVHjx6Nlvfo0SOzZs1a6jbPP/98fvvb36auri433XRTTj311Jx77rn53ve+t8z9mJMYAABoKrNnz86hhx6avn37Zq+99soDDzyQP/3pT/n0pz9d6dIAWEmm+QKg1auvr0/37t3z85//PNXV1Rk4cGBefPHF/PCHP8zpp5++1G3MSQwAADSVX/ziF5UuAYAy00wBoEXp1q1bqqur88orrzRa/sorr6Rnz55L3aZXr15p3759qqurG5ZtueWWmTVrVhYtWpQOHTo0ac0AAAAArNpM8wVAi9KhQ4cMHDgwkydPblhWX1+fyZMnZ/DgwUvdZtddd82zzz6b+vr6hmVPP/10evXqpZECAAAAwMemmQJAizN27Nhccskl+eUvf5knnngixxxzTBYuXJiRI0cmSQ499NCMGzeuYf1jjjkmr7/+eo499tg8/fTTufHGG/P9738/o0ePrtQhAAAAALAKMc0XAC3OwQcfnFdffTWnnXZaZs2ale222y633HJLw0XpZ8yYkaqq/3weoE+fPvnTn/6Ub37zm+nXr1/WXXfdHHvssTnppJMqdQgAAAAArEJW6syUPffcM3Pnzl1i+fz587Pnnnt+3JoAaIXKnQ1jxozJP//5z9TW1uZvf/tbBg0a1PDYlClTctlllzVaf/Dgwbnvvvvyzjvv5Lnnnsu3v/3tRtdQAWDVVa4MuvDCC9OvX7906dIlXbp0yeDBg3PzzTeXsVIAWjr/8wJgWVaqmTJlypQsWrRoieXvvPNO7rrrruV+HoMVgFVHubIBAFZUuTJovfXWy9lnn52pU6fmwQcfzJ577pkDDzww//jHP8pZLgAtmHENAMuyQtN8PfLIIw1fP/7445k1a1bD/bq6utxyyy1Zd911l/v53h+sbLbZZikWi/nlL3+ZAw88MA899FC23nrrFSkNgAopdzYAwPIqdwYNGzas0f2zzjorF154Ye677z7jE4BVnHENAB9lhZop2223XQqFQgqFwlJPbezUqVN++tOfLvfzGawAtH7lzgYAWF5NmUF1dXW59tprs3DhwgwePHiZ69XW1qa2trbh/vz581dqfwBUlnENAB9lhZop06dPT7FYzMYbb5z7778/66yzTsNjHTp0SPfu3Vd6fvrlGawYqAC0PE2ZDQBQSlNk0KOPPprBgwfnnXfeyRprrJFJkyZlq622Wub648ePz5lnnrnSxwBAy2BcA8BHWaFmygYbbJAkqa+vL1sBKzJYMVABaHmaIhsAYHk0RQb17ds306ZNy7x58/Lb3/42hx12WO64445ljlHGjRuXsWPHNtyfP39++vTpU7Z6AGgexjUAfJQVaqZ80DPPPJO//OUvmT179hJBc9pppy3386zIYMVABaBlK1c2AMCKKlcGdejQIZtuummSZODAgXnggQfyk5/8JBdffPFS16+pqUlNTc3KFw5Ai2NcA8DSrFQz5ZJLLskxxxyTbt26pWfPnikUCg2PFQqFJhusGKgAtFzlzAYAWBFNmUH19fWNphoGYNVmXAPAsqxUM+V73/tezjrrrJx00knlrsdgBaCVaspsAIBSypVB48aNy7777pv1118/b775Zq688spMmTIlf/rTn8pUKQAtnXENAMuyUs2UN954IwcddNDH3rnBCsCqo1zZAAArqlwZNHv27Bx66KF5+eWX07Vr1/Tr1y9/+tOf8ulPf7oMVQLQGhjXALAsVSuz0UEHHZRbb731Y+/8/cFK3759s9dee+WBBx4wWAFopcqVDQCwosqVQb/4xS/ywgsvpLa2NrNnz87tt99ubALQxhjXALAsK3VmyqabbppTTz019913X7bddtu0b9++0ePf+MY3lut5fvGLX6zM7gFogcqVDQCwomQQAOUiUwBYlpVqpvz85z/PGmuskTvuuCN33HFHo8cKhYJgAWiDZAMAlSKDACgXmQLAsqxUM2X69OnlrgOAVk42AFApMgiAcpEpACzLSl0zBQAAAAAAoK1YqTNTjjjiiJKPT5gwYaWKAaD1kg0AVIoMAqBcZAoAy7JSzZQ33nij0f3Fixfnsccey9y5c7PnnnuWpTAAWhfZAEClyCAAykWmALAsK9VMmTRp0hLL6uvrc8wxx2STTTb52EUB0PrIBgAqRQYBUC4yBYBlKds1U6qqqjJ27Nj8+Mc/LtdTAtDKyQYAKkUGAVAuMgWApMwXoH/uuefy7rvvlvMpAWjlZAMAlSKDACgXmQLASk3zNXbs2Eb3i8ViXn755dx444057LDDylIYAK2LbACgUmQQAOUiUwBYlpVqpjz00EON7ldVVWWdddbJueeemyOOOKIshQHQusgGACpFBgFQLjIFgGVZqWbKX/7yl3LXAUArJxsAqBQZBEC5yBQAlmWlminve/XVV/PUU08lSfr27Zt11lmnLEUB0HrJBgAqRQYBUC4yBYAPW6kL0C9cuDBHHHFEevXqld122y277bZbevfunVGjRuWtt94qd40AtAKyAYBKkUEAlItMAWBZVqqZMnbs2Nxxxx354x//mLlz52bu3Ln5/e9/nzvuuCPf+ta3yl0jAK2AbACgUmQQAOUiUwBYlpWa5ut3v/tdfvvb32b33XdvWLbffvulU6dO+cIXvpALL7ywXPUB0ErIBgAqRQYBUC4yBYBlWakzU95666306NFjieXdu3d3yiNAGyUbAKgUGQRAucgUAJZlpZopgwcPzumnn5533nmnYdnbb7+dM888M4MHDy5bcQC0HrIBgEqRQQCUi0wBYFlWapqv888/P/vss0/WW2+99O/fP0ny8MMPp6amJrfeemtZCwSgdZANAFSKDAKgXGQKAMuyUs2UbbfdNs8880yuuOKKPPnkk0mSQw45JCNGjEinTp3KWiAArYNsAKBSZBAA5SJTAFiWlWqmjB8/Pj169MhRRx3VaPmECRPy6quv5qSTTipLcQC0HrIBgEqRQQCUi0wBYFlW6popF198cbbYYosllm+99da56KKLPnZRALQ+sgGASpFBAJSLTAFgWVaqmTJr1qz06tVrieXrrLNOXn755Y9dFACtj2wAoFJkEADlIlMAWJaVaqb06dMnd9999xLL77777vTu3ftjFwVA6yMbAKgUGQRAucgUAJZlpa6ZctRRR+W4447L4sWLs+eeeyZJJk+enBNPPDHf+ta3ylogAK2DbACgUmQQAOUiUwBYlpVqppxwwgl57bXX8t///d9ZtGhRkqRjx4456aSTMm7cuLIWCEDrIBsAqBQZBEC5yBQAlmWlmimFQiHnnHNOTj311DzxxBPp1KlTNttss9TU1JS7PgBaCdkAQKXIIADKRaYAsCwr1Ux53xprrJEdd9yxXLUAsAqQDQBUigwCoFxkCgAftlIXoAcAAAAAAGgrNFMAAAAAAABK0EwBAAAAAAAoQTMFAAAAAACgBM0UAAAAAACAEjRTAAAAAAAAStBMAQAAAAAAKEEzBQAAAAAAoATNFAAAAAAAgBI0UwAAAAAAAErQTAEAAAAAAChBMwUAAAAAAKAEzRQAAAAAKKPx48dnxx13TOfOndO9e/cMHz48Tz31VKXLAuBj0EwBAAAAgDK64447Mnr06Nx333257bbbsnjx4vzXf/1XFi5cWOnSAFhJ7SpdAAAAAACsSm655ZZG9y+77LJ07949U6dOzW677bbE+rW1tamtrW24P3/+/CavEYAV48wUAFqkCy64IBtuuGE6duyYQYMG5f7771+u7a666qoUCoUMHz68aQsEAABYTvPmzUuSrLXWWkt9fPz48enatWvDrU+fPs1ZHgDLQTMFgBbn6quvztixY3P66afn73//e/r375+99947s2fPLrndCy+8kOOPPz5DhgxppkoBAABKq6+vz3HH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e++989RTT6V79+5LrD9lypQccsgh2WWXXdKxY8ecc845+a//+q/84x//yLrrrluBIwAAANqyfffdN/vuu+9yr19bW5va2tqG+/Pnz2+KsgD4GFwzBYAW57zzzstRRx2VkSNHZquttspFF12U1VZbLRMmTFjq+ldccUX++7//O9ttt1222GKLXHrppamvr8/kyZObuXIAAIAVN378+HTt2rXh1qdPn0qXBMCHaKYA0KIsWrQoU6dOzdChQxuWVVVVZejQobn33nuX6zneeuutLF68OGuttdYy16mtrc38+fMb3QAAACph3LhxmTdvXsNt5syZlS4JgA+paDPlzjvvzLBhw9K7d+8UCoVcf/31lSwHgBZgzpw5qaurS48ePRot79GjR2bNmrVcz3HSSSeld+/ejRoyH+aTXwAsjTEKAJVQU1OTLl26NLoB0LJUtJny/sW4LrjggkqWAcAq5Oyzz85VV12VSZMmpWPHjstczye/AFgaYxQAAGBpKnoB+hW9GBcAq75u3bqluro6r7zySqPlr7zySnr27Fly2x/96Ec5++yzc/vtt6dfv34l162pqUlNTc3HrheAVYsLBgMAAEvTqq6ZYn57gFVfhw4dMnDgwEYXj3//YvKDBw9e5nY/+MEP8t3vfje33HJLdthhh+YoFQBMGwnAUi1YsCDTpk3LtGnTkiTTp0/PtGnTMmPGjMoWBsBKa1XNFAMVgLZh7NixueSSS/LLX/4yTzzxRI455pgsXLgwI0eOTJIceuihGTduXMP655xzTk499dRMmDAhG264YWbNmpVZs2ZlwYIFlToEANoI00YCsDQPPvhgBgwYkAEDBiR5b4wzYMCAnHbaaRWuDICVVdFpvlbUuHHjMnbs2Ib78+fP11ABWAUdfPDBefXVV3Paaadl1qxZ2W677XLLLbc0XJR+xowZqar6z+cBLrzwwixatCif//znGz3P6aefnjPOOKM5SwegjTFtJABLs/vuu6dYLFa6DADKqFU1UwxUANqOMWPGZMyYMUt9bMqUKY3uv/DCC01fEAAAAABtVqua5gsAAAAAAKC5VfTMlAULFuTZZ59tuP/+xbjWWmutrL/++hWsDAAAaIuMUQAAgKWpaDPlwQcfzB577NFw//3roRx22GG57LLLKlQVAADQVhmjAAAAS1PRZoqLcQEAAC2JMQoAALA0rpkCtBprd+6YYn1dpctoMbwWAAAAANA8KnpmCsCK6NyxQwpV1Zlz3clZPOf5SpdTUe27bZxunzu70mUAAAAAQJugmQK0OovnPJ/Fs56odBkAAAAAQBthmi8AAAAAAIASNFMAAAAAAABK0EwBAAAAAAAoQTMFAAAAAACgBM0UAAAAAACAEjRTAABoU9bu3DHF+rpKl9GieD0AAABKa1fpAgAAoDl17tghharqzLnu5Cye83yly6m49t02TrfPnV3pMgAAAFo0zRQAANqkxXOez+JZT1S6DAAAAFoB03wBAAAAAACUoJkCAAAAAABQgmYKAAAAAABACZopAAAAAAAAJWimAAAAAAAAlKCZAgAAAAAAUIJmCgAAAAAAQAmaKQAAAAAAACVopgAAAAAAAJSgmUKDtTt3TLG+rtJltCheDwAAAAAA2lW6AFqOzh07pFBVnTnXnZzFc56vdDkV177bxun2ubMrXQYAAAAAABWmmcISFs95PotnPVHpMgAAAAAAoEUwzRcAAAAAAEAJmikAAAAAAAAlaKYAAAAAAACUoJkCAAAAAABQgmYKAAAAAABACZopAAAAAAAAJWimAAAAAAAAlKCZAgAAAAAAUIJmCgAAAAAArKS6+vpKl7DCWmPNldau0gUAAAAAAEBrVV1VlVOuvCvTZ8+rdCnLZaPuXfO9Lw2pdBmtjmYKAAAAAAB8DNNnz8uTL75e6TJoQqb5AgAAAAAAKEEzBQAAAAAAoATNFAAAAAAAgBI0UwAAAAAAAErQTAEAAAAAAChBMwUAAAAAgOW2dueOKdbXVbqMFdYaa6blaFfpAgAAAAAAaD06d+yQQlV15lx3chbPeb7S5SyX9t02TrfPnV3pMmjFNFMAAAAAAFhhi+c8n8Wznqh0GdAsTPMFAAAAAABQgmYKAAAAAABACZopAAAAAADQRqzduWOK9XWVLmOFVbpm10wBAAAAAIA2onPHDilUVWfOdSdn8ZznK13OcmnfbeN0+9zZFa1BMwUAAAAAANqYxXOez+JZT1S6jFbDNF8AAAAAAAAlaKYAAAAAAACU0CKaKRdccEE23HDDdOzYMYMGDcr9999f6ZIAqLAVzYZrr702W2yxRTp27Jhtt902N910UzNVCsCqxvgEgHKRKQCrjoo3U66++uqMHTs2p59+ev7+97+nf//+2XvvvTN79uxKlwZAhaxoNtxzzz055JBDMmrUqDz00EMZPnx4hg8fnscee6yZKwegtTM+AaBcZArAqqXizZTzzjsvRx11VEaOHJmtttoqF110UVZbbbVMmDCh0qUBUCErmg0/+clPss8+++SEE07Illtume9+97vZfvvt87Of/ayZKwegtTM+AaBcZArAqqVdJXe+aNGiTJ06NePGjWtYVlVVlaFDh+bee+9dYv3a2trU1tY23J83b16SZP78+R+7lt5rtMvitTt+7OdpzT7R8b3X8p3V1s3irosrXU7F1a22bll+tsrBz+d7/Iz+Rzl+Pt/fvlgslqOkslnRbEiSe++9N2PHjm20bO+9987111+/zP00RabU1denuqrin1NoMbweLZNMkScf9nEzpaXmycpYmQwyRmlafl//oyWNTxI/n+/rvUa7FvV9ae3acqaUI09a0+9la3x/b473Yd/DptXU30Pfv6a1It+/psqTijZT5syZk7q6uvTo0aPR8h49euTJJ59cYv3x48fnzDPPXGJ5nz59mqzGtuTaJCdUuogW5/xKF8AH+Bn9sPPL8ixvvvlmunbtWpbnKocVzYYkmTVr1lLXnzVr1jL3I1Og7ZInS3P+x36GlpYnK2NlMkieNC2/rx92fqULYCl+dFSlK1j1tMVMaWt50nrf38+vdAEthu9h69ZWvn/lzpOKNlNW1Lhx4xp98ri+vj6vv/561l577RQKhQpWtmqYP39++vTpk5kzZ6ZLly6VLgeW4Ge0vIrFYt5888307t270qVUhExpWn5facn8fJaXPJEnTcnvKy2dn9HyasuZ0tbyxO9O6+d72Lqt6t+/psqTijZTunXrlurq6rzyyiuNlr/yyivp2bPnEuvX1NSkpqam0bI111yzKUtsk7p06bJK/hKx6vAzWj4t8dNeK5oNSdKzZ88VWj+RKc3F7ystmZ/P8mmJebIyViaD5Enz8PtKS+dntHzaaqa01Tzxu9P6+R62bqvy968p8qSiE5l36NAhAwcOzOTJkxuW1dfXZ/LkyRk8eHAFKwOgUlYmGwYPHtxo/SS57bbbZAkAK8T4BIBykSkAq56KT/M1duzYHHbYYdlhhx2y00475fzzz8/ChQszcuTISpcGQIV8VDYceuihWXfddTN+/PgkybHHHptPfepTOffcc7P//vvnqquuyoMPPpif//znlTwMAFoh4xMAykWmAKxaKt5MOfjg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l12WJCkUCrnwwgvzmc98JquvvnrOOuusRtN8zZ8/P506dcrNN9/c6LknTZqUzp0756233lri9Pj3t588eXJ22GGHrLbaatlll13y1FNPNXqO733ve+nevXs6d+6cI488MieffHLJs01WxIc/PTx37tx87WtfS48ePdKxY8dss802ueGGGxoe/+tf/5ohQ4akU6dO6dOnT77xjW9k4cKFjZ7v+9//fo444oh07tw566+/fn7+8583PL5o0aKMGTMmvXr1SseOHbPBBhtk/PjxjfZfKkMBKuH9nNhggw1yzDHHZOjQofnDH/7QMI3JWWedld69e6dv375JkpkzZ+YLX/hC1lxzzay11lo58MAD88ILLyRJbr311nTs2HGJKSKPPfbY7LnnnkmWPtXUhRdemE022SQdOnRI375986tf/arhsaVNvzJ37twUCoWG8cEbb7yRESNGZJ111kmnTp2y2WabZeLEiUsca7FYzKabbpof/ehHjZZPmzYthUIhzz777Aq/foVCIZdeemk++9nPZrXVVstmm22WP/zhDw2Pl6ptaVNqvl/L+6/pssY9HzVeen/b9ddfP6uttlo++9nP5rXXXlvh4wOopAMOOCDrrLNOw7jlfQsWLMi1116bUaNGfeTf8Eny1ltvLfNv+KXlzD/+8Y8ccMAB6dKlSzp37pwhQ4bkueeeW2qN9fX1GT9+fDbaaKN06tQp/fv3z29/+9sVOs6JEyfmgAMOyDHHHJPf/OY3efvttxs9/uabb2bEiBFZffXV06tXr/z4xz9eYrr85ckFKBfNFNq01157LbfeemtGjx6d1VdffanrvP/J5IMOOiizZ8/OzTffnKlTp2b77bfPXnvtlddff71h3eeeey7XX399brjhhtxwww254447cvbZZzc8fsIJJ+SOO+7I73//+9x6662ZMmVK/v73vzfa35gxY3LvvffmqquuyiOPPJKDDjoo++yzT5555pmGdd56662cc845ufTSS/OPf/zDJ9wAltOee+6Z/v3757rrrmtYdsYZZ+Szn/1sHn300RxxxBGN1u/SpUsOOOCAXHnllY2WX3HFFRk+fHjJsz++853v5Nxzz82DDz6Ydu3aNXruK664ImeddVbOOeecTJ06Neuvv34uvPDCMh1lY/X19dl3331z991359e//nUef/zxnH322amurk7yXnbts88++X//7//lkUceydVXX52//vWvGTNmTKPnOffcc7PDDjvkoYceyn//93/nmGOOaWgQ/e///m/+8Ic/5JprrslTTz2VK664IhtuuGHDtsuToQCV1qlTp4azUCZPnpynnnoqt912W2644YYsXrw4e++9dzp37py77rord999d9ZYY43ss88+WbRoUfbaa6+sueaa+d3vftfwfHV1dbn66qszYsSIpe5v0qRJOfbYY/Otb30rjz32WL72ta9l5MiR+ctf/rLcNZ966ql5/PHHc/PNN+eJJ57IhRdemG7dui2xXqFQyBFHHLFEo2XixInZbbfdsummmy73Pj/ozDPPzBe+8IU88sgj2W+//TJixIiG9/blra2UpY17Pmq89Le//S2jRo3KmDFjMm3atOyxxx753ve+t1LHB1Ap7dq1y6GHHprLLrssxWKxYfm1116burq6DB48+GP/Df9hL774YnbbbbfU1NTkz3/+c6ZOnZojjjhimWf1jx8/Ppdffnkuuuii/OMf/8g3v/nNfPnLX84dd9yxXMdYLBYzceLEfPnLX84WW2yRTTfddIlmzNixY3P33XfnD3/4Q2677bbcddddK/V/NCibIrRh9913XzFJ8brrrmu0fO211y6uvvrqxdVXX7144oknFu+6665ily5diu+8806j9TbZZJPixRdfXCwWi8XTTz+9uNpqqxXnz5/f8PgJJ5xQHDRoULFYLBbffPPNYocOHYrXXHNNw+OvvfZasVOnTsVjjz22WCwWi//85z+L1dXVxRdffLHRfvbaa6/iuHHjisVisThx4sRikuK0adPK8yIArIIOO+yw4oEHHrjUxw4++ODilltuWSwWi8UkxeOOO67R43/5y1+KSYpvvPFGsVgsFidNmlRcY401igsXLiwWi8XivHnzih07dizefPPNxWKxWJw+fXoxSfGhhx5qtP3tt9/e8Jw33nhjMUnx7bffLhaLxeKgQYOKo0ePbrTfXXfdtdi/f//lOr7TTz+95LobbLBB8cc//nGxWCwW//SnPxWrqqqKTz311FLXHTVqVPGrX/1qo2V33XVXsaqqqqHeDTbYoPjlL3+54fH6+vpi9+7dixdeeGGxWCwWv/71rxf33HPPYn19/RLPvzwZCtDcPpgT9fX1xdtuu61YU1NTPP7444uHHXZYsUePHsXa2tqG9X/1q18V+/bt2+h9rra2ttipU6fin/70p2KxWCwee+yxxT333LPh8T/96U/FmpqahjyZOHFisWvXrg2P77LLLsWjjjqqUV0HHXRQcb/99isWi0vmS7FYLL7xxhvFJMW//OUvxWKxWBw2bFhx5MiRSz3GD2//4osvFqurq4t/+9vfisVisbho0aJit27dipdddtlyvWYfzJZi8b0MPeWUUxruL1iwoJikIR9L1fbhrC0Wi8WHHnqomKQ4ffr0YrG49HHP8oyXDjnkkIbX8H0HH3xwo9ceoDV44oknGr3nF4vF4pAhQ4pf/vKXy/I3/IdzYty4ccWNNtqouGjRoqXW88HsfOedd4qrrbZa8Z577mm0zqhRo4qHHHLIch3frbfeWlxnnXWKixcvLhaLxeKPf/zj4qc+9amGx+fPn19s37598dprr21YNnfu3OJqq622Qv9Hg3JyZgosxf33359p06Zl6623Tm1tbR5++OEsWLAga6+9dtZYY42G2/Tp0xud7rjhhhumc+fODfd79eqV2bNnJ3nvk7+LFi3KoEGDGh5fa621GqYNSJJHH300dXV12XzzzRvt54477mi0nw4dOnzsuTEB2qpisdjoeig77LBDyfX322+/tG/fvmHqkt/97nfp0qVLhg4dWnK7D75P9+rVK0kaMuGpp57KTjvt1Gj9D98vl2nTpmW99dbL5ptvvtTHH3744Vx22WWNcmfvvfdOfX19pk+f3rDeB4+nUCikZ8+eDcdz+OGHZ9q0aenbt2++8Y1v5NZbb230/MuToQDN7YYbbsgaa6yRjh07Zt99983BBx+cM844I0my7bbbpkOHDg3rPvzww3n22WfTuXPnhvextdZaK++8807De9mIESMyZcqUvPTSS0neOwtx//33X2Jqr/c98cQT2XXXXRst23XXXfPEE08s9zEcc8wxueqqq7LddtvlxBNPzD333LPMdXv37p3999+/YU76P/7xj6mtrc1BBx203Pv7sA9mw+qrr54uXbo0ZMOK1LYsHx73LM946Yknnmg05kqSwYMHr8zhAVTUFltskV122aXhffvZZ5/NXXfdlVGjRpXlb/gPmzZtWoYMGZL27dt/ZG3PPvts3nrrrXz6059uVMPll1++3H/jT5gwIQcffHDDNVsOOeSQ3H333Q3bP//881m8eHGjcVLXrl1X6v9oUC4t50qpUAGbbrppCoXCEqc4brzxxkneO9U/eW9Oyl69ei11zsUPDo4+HDiFQmGFLpK4YMGCVFdXZ+rUqQ3Tr7xvjTXWaPi6U6dOy31hZAAae+KJJ7LRRhs13F/WNI/v69ChQz7/+c/nyiuvzBe/+MVceeWVjf7oX5YPZsL779mVuHDu+1m2LAsWLMjXvva1fOMb31jisfXXX7/h61IZt/3222f69Om5+eabc/vtt+cLX/hChg4dmt/+9rfLnaEAzW2PPfbIhRdemA4dOqR3796N3tc/nA0LFizIwIEDc8UVVyzxPOuss06SZMcdd8wmm2ySq666Ksccc0wmTZq0xFz3K6Kq6r3PPhY/ML3L4sWLG62z77775p///Gduuumm3Hbbbdlrr70yevToJa6N8r4jjzwyX/nKV/LjH/84EydOzMEHH1xyysqPUiobStW2PMeWLDnuWd7xEsCqYtSoUfn617+eCy64IBMnTswmm2yST33qU2X5G/7DPmrc8EELFixIktx4441Zd911Gz1WU1Pzkdu//vrrmTRpUhYvXtxouuO6urpMmDAhZ5111nLXIRdoTpoptGlrr712Pv3pT+dnP/tZvv71ry/zH2rbb799Zs2alXbt2jWaA35FbLLJJmnfvn3+9re/NQTbG2+8kaeffjqf+tSnkiQDBgxIXV1dZs+enSFDhqzUfgBYtj//+c959NFH881vfnOFthsxYkQ+/elP5x//+Ef+/Oc/f+y51/v27ZsHHngghx56aMOyBx544GM957L069cv//rXv/L0008v9eyU7bffPo8//vhKz5f/vi5duuTggw/OwQcfnM9//vPZZ5998vrrr5clQwGawuqrr77c733bb799rr766nTv3j1dunRZ5nojRozIFVdckfXWWy9VVVXZf//9l7nulltumbvvvjuHHXZYw7K77747W221VZL/NGlefvnlDBgwIEkaXST4feuss04OO+ywHHbYYRkyZEhOOOGEZTZT9ttvv6y++uq58MILc8stt+TOO+/8yGP/OJZV2weP7ROf+ESSpR/bhy3PeGnLLbfM3/72t0bL7rvvvo93IAAV8oUvfCHHHntsrrzyylx++eU55phjUigUyvY3/Af169cvv/zlL7N48eKPPDtlq622Sk1NTWbMmNHwP60V8X5WXn/99Y2W33rrrTn33HPzP//zP9l4443Tvn37PPDAAw3/R5s3b16efvrp7Lbbbkn8H43mp5lCm/d///d/2XXXXbPDDjvkjDPOSL9+/VJVVZUHHnggTz75ZAYOHJihQ4dm8ODBGT58eH7wgx9k8803z0svvZQbb7wxn/3sZz9yipjkvY74qFGjcsIJJ2TttddO9+7d853vfKfhU1lJsvnmm2fEiBE59NBDc+6552bAgAF59dVXM3ny5PTr16/kYAyAxmprazNr1qzU1dXllVdeyS233JLx48fngAMOaNTEWB677bZbevbsmREjRmSjjTZaYvqQFfX1r389Rx11VHbYYYfssssuufrqq/PII480nBm5PN5+++0l/vHUuXPnbLLJJo2WfepTn8puu+2W//f//l/OO++8bLrppnnyySdTKBSyzz775KSTTsrOO++cMWPG5Mgjj8zqq6+exx9/PLfddlt+9rOfLVct5513Xnr16pUBAwakqqoq1157bXr27Jk111yzLBkKUGkjRozID3/4wxx44IH5n//5n6y33nr55z//meuuuy4nnnhi1ltvvYb1zjjjjJx11ln5/Oc/X/LTuSeccEK+8IUvZMCAARk6dGj++Mc/5rrrrsvtt9+e5L1PCO+88845++yzs9FGG2X27Nk55ZRTGj3HaaedloEDBzZMT3zDDTdkyy23XOY+q6urc/jhh2fcuHHZbLPNmnT6q1K1bbrppunTp0/Da/X000/n3HPP/cjnXJ7x0je+8Y3suuuu+dGPfpQDDzwwf/rTn3LLLbc02XECNKU11lgjBx98cMaNG5f58+fn8MMPT5Ky/A3/YWPGjMlPf/rTfPGLX8y4cePStWvX3Hfffdlpp50aTa2VvDfuOP744/PNb34z9fX1+eQnP5l58+bl7rvvTpcuXRp9UGBpfvGLX+Tzn/98ttlmm0bL+/Tpk3HjxuWWW27J/vvvn8MOOywnnHBC1lprrXTv3j2nn356qqqqGs5a9H80mptrptDmbbLJJnnooYcydOjQjBs3Lv37988OO+yQn/70pzn++OPz3e9+N4VCITfddFN22223jBw5Mptvvnm++MUv5p///Gd69Oix3Pv64Q9/mCFDhmTYsGEZOnRoPvnJT2bgwIGN1pk4cWIOPfTQfOtb30rfvn0zfPjwRl14AJbPLbfckl69emXDDTfMPvvsk7/85S/53//93/z+979f4hTwj1IoFHLIIYfk4YcfzogRIz52bSNGjMi4ceNy/PHHN0yRdfjhh6djx47L/RxPP/10BgwY0Oj2ta99banr/u53v8uOO+6YQw45JFtttVVOPPHE1NXVJXnvE2h33HFHnn766QwZMiQDBgzIaaedlt69ey93LZ07d84PfvCD7LDDDtlxxx3zwgsv5KabbmoY6JQjQwEqabXVVsudd96Z9ddfP5/73Oey5ZZbZtSoUXnnnXcanamy6aabZqeddsojjzzykXkxfPjw/OQnP8mPfvSjbL311rn44oszceLE7L777g3rTJgwIe+++24GDhyY4447bokzIzt06JBx48alX79+2W233VJdXZ2rrrqq5H5HjRqVRYsWZeTIkSv+QqyAUrW1b98+v/nNb/Lkk0+mX79+Oeecc5b7rM+PGi/tvPPOueSSS/KTn/wk/fv3z6233rpEEwqgNRk1alTeeOON7L333g1/o5fjb/gPW3vttfPnP/85CxYsyKc+9akMHDgwl1xyyTLPUvnud7+bU089NePHj8+WW26ZffbZJzfeeGOjKZWXZurUqXn44Yfz//7f/1visa5du2avvfbKL37xiyTvfWhr8ODBOeCAAzJ06NDsuuuu2XLLLRuNm/wfjeZUKH5wklIAACri05/+dHr27Jlf/epXlS4FgFXYXXfdlb322iszZ87U1AagVVm4cGHWXXfdnHvuuRk1alSly6ENMs0XAEAze+utt3LRRRdl7733TnV1dX7zm9/k9ttvz2233Vbp0gBYRdXW1ubVV1/NGWeckYMOOkgjBYAW76GHHsqTTz6ZnXbaKfPmzcv//M//JEkOPPDACldGW2WaLwCAZvbBqa8GDhyYP/7xj/nd736XoUOHJnlvbuRl3e66664KVw9Aa/Sb3/wmG2ywQebOnZsf/OAHjR674oorlpk7W2+9dYUqBqC1Ovroo5eZK0cfffQKPdePfvSj9O/fP0OHDs3ChQtz1113pVu3bk1UOZRmmi8AgBbm2WefXeZj6667bjp16tSM1QCwqnvzzTfzyiuvLPWx9u3bZ4MNNmjmigBozWbPnp358+cv9bEuXbqke/fuzVwRlIdmCgAAAAAAQAmm+QIAAAAAAChBMwUAAAAAAKAEzRQAAAAAAIASNFMAAAAAAABK0EwBAAAAAAAoQTMFAAAAAACgBM0UAAAAAACAEjRTAAAAAAAAStBMAQAAAAAAKGGVaabceeedGTZsWHr37p1CoZDrr79+hZ+jWCzmRz/6UTbffPPU1NRk3XXXzVlnnVX+YgEAAAAAgFajXaULKJeFCxemf//+OeKII/K5z31upZ7j2GOPza233pof/ehH2XbbbfP666/n9ddfL3OlAAAAAABAa1IoFovFShdRboVCIZMmTcrw4cMbltXW1uY73/lOfvOb32Tu3LnZZpttcs4552T33XdPkjzxxBPp169fHnvssfTt27cyhQMAAAAAAC3OKjPN10cZM2ZM7r333lx11VV55JFHctBBB2WfffbJM888kyT54x//mI033jg33HBDNtpoo2y44YY58sgjnZkCAAAAAABtXJtopsyYMSMTJ07MtddemyFDhmSTTTbJ8ccfn09+8pOZOHFikuT555/PP//5z1x77bW5/PLLc9lll2Xq1Kn5/Oc/X+HqAQAAAACASlplrplSyqOPPpq6urpsvvnmjZbX1tZm7bXXTpLU19entrY2l19+ecN6v/jFLzJw4MA89dRTpv4CAAAAAIA2qk00UxYsWJDq6upMnTo11dXVjR5bY401kiS9evVKu3btGjVcttxyyyTvndmimQIAAAAAAG1Tm2imDBgwIHV1dZk9e3aGDBmy1HV23XXXvPvuu3nuueeyySabJEmefvrpJMkGG2zQbLUCAAAAAAAtS6FYLBYrXUQ5LFiwIM8++2yS95on5513XvbYY4+stdZaWX/99fPlL385d999d84999wMGDAgr776aiZPnpx+/fpl//33T319fXbcccesscYaOf/881NfX5/Ro0enS5cuufXWWyt8dAAAAAAAQKWsMhegf/DBBzNgwIAMGDAgSTJ27NgMGDAgp512WpJk4sSJOfTQQ/Otb30rffv2zfDhw/PAAw9k/fXXT5JUVVXlj3/8Y7p165bddtst+++/f7bccstcddVVFTsmgLbozjvvzLBhw9K7d+8UCoVcf/31H7nNlClTsv3226empiabbrppLrvssiavE4CWT6YAUA7yBIBkFWqm7L777ikWi0vc3g+r9u3b58wzz8z06dOzaNGivPTSS7nuuuuy7bbbNjxH796987vf/S5vvvlmZs2alYkTJ2attdaq0BEBtE0LFy5M//79c8EFFyzX+tOnT8/++++fPfbYI9OmTctxxx2XI488Mn/605+auFIAWjqZAkA5yBMAklVomi8AVj2FQiGTJk3K8OHDl7nOSSedlBtvvDGPPfZYw7IvfvGLmTt3bm655ZZmqBKA1kCmAFAO8gSg7WrVF6Cvr6/PSy+9lM6dO6dQKFS6HIBWpVgs5s0330zv3r1TVdV6T1S89957M3To0EbL9t577xx33HElt6utrU1tbW3D/fr6+rz++utZe+21ZQrAClhV8iRZuUyRJwDls6pkijwBqKymypNW3Ux56aWX0qdPn0qXAdCqzZw5M+utt16ly1hps2bNSo8ePRot69GjR+bPn5+33347nTp1Wup248ePz5lnntkcJQK0Ca09T5KVyxR5AlB+rT1T5AlAy1DuPGnVzZTOnTsnee9F6dKlS4WrAWhd5s+fnz59+jS8l7Y148aNy9ixYxvuz5s3L+uvv75MAVhB8kSeAJRLW84UeQJQPk2VJ626mfL+aY5dunQRLAArqbWfMt6zZ8+88sorjZa98sor6dKlyzLPSkmSmpqa1NTULLFcpgCsnNaeJ8nKZYo8ASi/1p4p8gSgZSh3nrTeCSgBIMngwYMzefLkRstuu+22DB48uEIVAdBayRQAykGeAKyaNFMAaFEWLFiQadOmZdq0aUmS6dOnZ9q0aZkxY0aS905/P/TQQxvWP/roo/P888/nxBNPzJNPPpn/+7//yzXXXJNvfvOblSgfgBZEpgBQDvIEgEQzBYAW5sEHH8yAAQMyYMCAJMnYsWMzYMCAnHbaaUmSl19+uWHQkiQbbbRRbrzxxtx2223p379/zj333Fx66aXZe++9K1I/AC2HTAGgHOQJAElSKBaLxUoXsbLmz5+frl27Zt68eeaPBFZKXV1dFi9eXOkymkT79u1TXV29zMe9hzbm9QBYOd4/G/N6AKw876H/4bUAWHlN9R7aqi9AD7CyisViXn755cydOzett6VcWqGQrLnmmunVq1erv4AjAAAAAFSSZgrQJr388st544256dx5zdTU1CRZ1ZoNxdTW1uaNN+YmSXr37l3ZcgAAAACgFdNMAdqcurq6zJ37XiOlc+eulS6nyXTo0DFJMnfu3PTo0aPklF8AAAAAwLK5AD3Q5ixevDjFYv59RsqqraamJsViVtnrwgAAAABAc9BMAdqwVW1qr6VpC8cIAAAAAE1LMwUAAAAAAKAEzRQAAAAAAIASXIAeYCl23nn7ko+PGvXVHHXU0c1UTWM777x9zjnn3HzqU3tUZP8AAAAA0NZopgAsxY033trw9e2335qf//yiXHPNdQ3LOnVabYWeb/HixWnfvn3Z6gMAAAAAmo9mSpK6+vpUV5nxLPFawPvWXrtbw9err75GCoX/LPvXv2bm7LPPymOPPZp33nk7G264UY455uvZaadBDdsMH75/PvOZ4Zk5c0buuGNKdt99z5x22pm5/vrrMmHCJZk3b1523nlw+vcfkAkTfp7bb7+zYds775ySSy/9eV544fl067ZO9tvvgBx++Ki0a9cuw4fvnyQ56aRvJUl69uyV66+/sTleEgAAAABoszRTklRXVeWUK+/K9NnzKl1KRW3UvWu+96UhlS4DWry33347u+yya44+enTat++Qm2++ISeccFyuvvq69OzZq2G9K674VY444qiMGvXVJMnDD0/LD37w/Ywe/Y0MGfKp3H//3/Lzn1/Y6LmnTft7zjzztIwde0K2225A/vWvf+Xss7+XJDnyyK9l4sRfZ99998opp5yRwYN3SVVVdfMdOAAAAAC0UZop/zZ99rw8+eLrlS4DaAU222zzbLbZ5g33v/a1/84dd/wld911Rw466IsNy3fYYceMGPGVhvsXXXRBBg/eJSNGHJokWX/9DfLoow/n7rvvaljn0kt/nkMPPTz77z8sSbLuuuvlq189Jhdc8JMceeTX8olPfCJJ0rlz50ZnzwAAAAAATUczBWAFvfXWW7n00otz99135bXX5qSuri61tbWZNWtWo/W22GLLRvdnzPjnEheN32qrbRo1U5599uk8+ujDueyyXzQsq6+vT21tbd555+107NipCY4IAAAAAChFMwVgBf30pz/O/ff/LV//+nFZb70+qampybe/fWLefXdxo/U6dVrxxsfbb7+dI4/8Wnbffc8lHuvQoWalawYAAAAAVp5mCsAKeuSRh7P//sMaGh5vvfVWXn75pSQDS263/vob5PHH/9Fo2RNPNL6/+eZbZMaMf6ZPn/WX+Tzt2rVLXV39yhUPAAAAAKywqkoXANDarLden0yZ8uc8/fRTeeaZp3Paad9OfX3xI7c76KAv5t57786VV/46M2bMyKRJv829996TQqHQsM6oUUflpptuzKWXXpznn38u06c/n9tu+1MuuuiChnV69eqdBx+8P6+9Nifz589vkmMEAAAAAP5DMwVgBR177LfSuXPnHHXUyBx//HHZeefB6dt3i4/crn//7XLiid/Ob37z63zlK1/Mfffdmy9+8UuNpu/aeeddcu655+dvf7svI0d+JUceeXh+85sr0rNnr4Z1vvGNb+b+++/LZz6zXw499JAmOUYAAAAA4D9M8wXwEQ444DM54IDPNNzv3bt3Lrjg543W+fznD250//rrb1zqcw0f/rkMH/65hvvf//53s9566zVaZ+edd8nOO++yzHqGDPlUhgz51HLXDwAAAAB8PM5MAWhGV1xxeZ555unMnDkj11xzVW666Y/Zb79hlS4LAAAAACjBmSkAzejxx/+RX//6l3nrrbfSu/e6GTv2xBx44GcrXRYAAAAAUIJmCkAzOuuscypdAgAAAACwgkzzBQAAAAAAUIJmCgAAAAAAQAmaKQAAAAAAACVopgAAAAAAAJSgmQIAAAAAAFCCZgoAAAAAAEAJ7SpdAEBLUigUUlVVaLb91dcXUywWm21/AAAAAMCK00wB+LdCoZDOnTumurr5Ttqrq6vPm2++s8INld/+9ur8+teX5/XXX8umm26eb33rxGy99TZNVCUAAAAAtG2aKQD/VlVVSHV1VU658q5Mnz2vyfe3Ufeu+d6XhqSqqpC6uuVvptx225/yk5+cl5NO+na23nrbXHXVFTnuuNG5+upJWWuttZqwYgAAAABomzRTAD5k+ux5efLF1ytdxjL95jdX5MADP5sDDjgwSXLSSd/JPff8NTfc8PsceujIClcHAAAAAKseF6AHaEUWL16cp556IjvuOKhhWVVVVXbccVAeffSRClYGAAAAAKsuzRSAVmTu3Lmpq6tbYjqvT3xirbz22msVqgoAAAAAVm2aKQAAAAAAACVopgC0ImuuuWaqq6vz+uuNr+nyxhuvZ+21165QVQAAAACwatNMAWhF2rdvn759t8wDD9zfsKy+vj4PPHB/tt22XwUrAwAAAIBVV7tKFwDQ0mzUvWuL3s8hh4zId797erbccqtstdXWufrqK/POO29n//0/U+YKAQAAAIBEMwWgQX19MXV19fnel4Y02z7r6upTX19coW0+/em9M3fuG7nkkgvz2muvZbPN+ubHP/6Zab4AAAAAoIlopgD8W7FYzJtvvpOqqkKz7bO+vphiccWaKUly0EFfzEEHfbEJKgIAAAAAPkwzBeADisVi6upWvLkBAAAAAKy6XIAeAAAAAACgBM0UAAAAAACAEjRTAAAAAAAAStBMAQAAAAAAKEEzBQAAAAAAoISKNlPOOOOMFAqFRrctttiikiUBAAAAAAA00q7SBWy99da5/fbbG+63a1fxkgAAAAAAABpUvHPRrl279OzZs9JlAAAAAAAALFXFmynPPPNMevfunY4dO2bw4MEZP3581l9//aWuW1tbm9ra2ob78+fPb64ygTaiUCikqqrQbPurry+mWCw22/4AAAAAgBVX0WbKoEGDctlll6Vv3755+eWXc+aZZ2bIkCF57LHH0rlz5yXWHz9+fM4888wKVAq0BYVCIV271KRQVd1s+yzW12Xe/Nrlbqg89NDU/PrXl+epp57InDlzcs455+ZTn9qjiasEAAAAgLatos2Ufffdt+Hrfv36ZdCgQdlggw1yzTXXZNSoUUusP27cuIwdO7bh/vz589OnT59mqRVY9VVVFVKoqs6c607O4jnPN/n+2nfbON0+d3aqqgqpq1u+Zsrbb7+TzTbbPMOGHZiTTz6+iSsEAAAAAJIWMM3XB6255prZfPPN8+yzzy718ZqamtTU1DRzVUBbs3jO81k864lKl7FUu+yya3bZZddKlwEAAAAAbUpVpQv4oAULFuS5555Lr169Kl0KAAAAAABAkgo3U44//vjccccdeeGFF3LPPffks5/9bKqrq3PIIYdUsiwAAAAAAIAGFZ3m61//+lcOOeSQvPbaa1lnnXXyyU9+Mvfdd1/WWWedSpYFAAAAAADQoKLNlKuuuqqSuwcAAAAAAPhILeqaKQAAAAAAAC2NZgrAh7TvtnHa99yy6W/dNl7h2t566608/fRTefrpp5IkL730Yp5++qnMmvVyuV+Girvggguy4YYbpmPHjhk0aFDuv//+kuuff/756du3bzp16pQ+ffrkm9/8Zt55551mqhaAlkqeAFAO8gSAik7zBdCS1NcXU6yvS7fPnd1s+yzW16W+vrjc6z/xxOMZPfqrDfd/8pPzkiT77Tcsp512Ztnrq5Srr746Y8eOzUUXXZRBgwbl/PPPz957752nnnoq3bt3X2L9K6+8MieffHImTJiQXXbZJU8//XQOP/zwFAqFnHfeeRU4AgBaAnkCQDnIEwASzRSABsViMfPm16aqqtBs+6yvL6ZYXP5mysCBO+S++/7ehBW1DOedd16OOuqojBw5Mkly0UUX5cYbb8yECRNy8sknL7H+Pffck1133TVf+tKXkiQbbrhhDjnkkPztb39r1roBaFnkCQDlIE8ASEzzBdBIsVhMXV19s91WpJHSVixatChTp07N0KFDG5ZVVVVl6NChuffee5e6zS677JKpU6c2nGr//PPP56abbsp+++23zP3U1tZm/vz5jW4ArDrkCQDlIE8AeJ8zUwBoUebMmZO6urr06NGj0fIePXrkySefXOo2X/rSlzJnzpx88pOfTLFYzLvvvpujjz463/72t5e5n/Hjx+fMM1edqdEAaEyeAFAO8gSA9zkzBYBWb8qUKfn+97+f//u//8vf//73XHfddbnxxhvz3e9+d5nbjBs3LvPmzWu4zZw5sxkrBqAlkicAlIM8AVg1OTMFgBalW7duqa6uziuvvNJo+SuvvJKePXsudZtTTz01X/nKV3LkkUcmSbbddtssXLgwX/3qV/Od73wnVVVLfnagpqYmNTU15T8AAFoEeQJAOcgTAN7nzBSgDWsL1ytpfcfYoUOHDBw4MJMnT25YVl9fn8mTJ2fw4MFL3eatt95aYkBSXV2dJK5LA9BGyRMAykGeAPA+Z6YAbU779u1TKLx3gb8OHTpWupwmVVtbm0LhvWNuTcaOHZvDDjssO+ywQ3baaaecf/75WbhwYUaOHJkkOfTQQ7Puuutm/PjxSZJhw4blvPPOy4ABAzJo0KA8++yzOfXUUzNs2LCGQQsAbY88AaAc5AkAiWYK0AZVV1dnzTXXzBtvzE2Sf59KXahoTeVXTG1tbd58c24+8Yk1W90f7AcffHBeffXVnHbaaZk1a1a222673HLLLQ0XfZwxY0ajT3qdcsopKRQKOeWUU/Liiy9mnXXWybBhw3LWWWdV6hAAaAHkCQDlIE8ASJJCsRWfXzh//vx07do18+bNS5cuXT7Wc404/4Y8+eLrZaqsddpi3bVyxXEHVLoMaBbFYjEvv/xy5s6dm9b7LlhaoZCsueaa6dWrVwqFJZtF5XwPXRV4PQBWjvfPxrweACvPe+h/eC0AVl5TvYc6MwVokwqFQnr37p0ePXpk8eLFlS6nSbRv377VnZECAAAAAC2RZgrQplVXV2s4AAAAAAAlVX30KgAAAAAAAG2XZgoAAAAAAEAJmikAAAAAAAAlaKYAAAAAAACUoJkCAAAAAABQgmYKAAAAAABACZopAAAAAAAAJWimAAAAAAAAlKCZAgAAAAAAUIJmCgAAAAAAQAmaKQAAAAAAACVopgAAAAAAAJSgmQIAAAAAAFCCZgq0cHX19ZUuoUXxegAAAAAAza1dpQsASquuqsopV96V6bPnVbqUituoe9d870tDKl0GAAAAANDGaKZAKzB99rw8+eLrlS4DAAAAAKBNMs0XAAAAAABACZopAAAAAAAAJWimAAAAAAAAlKCZAgAAAAAAUIJmCgAAAAAAQAmaKQAAAAAAACVopgAAAAAAAJSgmQIAAAAAAFCCZgoAAAAAAEAJmikAAAAAAAAlaKYAAAAAAACUoJkCAAAAAABQgmYKAAAAAABACZopAAAAAAAAJWimAAAAAAAAlKCZAgAAAAAAUEKLaaacffbZKRQKOe644ypdCgAAAAAAQIMW0Ux54IEHcvHFF6dfv36VLgUAAAAAAKCRijdTFixYkBEjRuSSSy7JJz7xiZLr1tbWZv78+Y1uAAAAAAAATanizZTRo0dn//33z9ChQz9y3fHjx6dr164Ntz59+jRDhQAA/7+9/4+uqr7zxf9XCCTBAvEHJfxolKq1+ANBoXCjQ/1x02JtqdzvbWXUAUqprYodNVOrVIWqrbFWLTOVyki1OrO0UL3qeAsLq1RsVXoZ+TG1FbUKFsZlgrQlQawBk/39ww85HoFdE3ZyEng81tprNTt7n/M675Xsp+mTczYAAACwPytombJgwYJYtWpV1NbWfqDjZ86cGQ0NDa3bxo0bO3hCAAAAAABgf9ezUE+8cePGuOSSS+Kxxx6LsrKyD3ROaWlplJaWdvBkAAAAAAAAOQUrU1auXBmbNm2KE088sXVfc3Nz/OpXv4rbbrstmpqaori4uFDjAQAAAAAAREQBy5T/+T//Zzz33HN5+6ZNmxbDhg2LK664QpECAAAAAAB0CQUrU/r27RvHHXdc3r4PfehDccghh+yyHwAAAAAAoFAKegN6AAAAAACArq5g70zZnWXLlhV6BAAAAAAAgDzemQIAAAAAAJBCmQIAAAAAAJBCmQIAAAAAAJBCmQIAAAAAAJBCmQIAAAAAAJBCmQIAAAAAAJBCmQIAAAAAAJBCmQIAAAAAAJBCmQIAAAAAAJBCmQIAAAAAAJBCmQIAAAAAAJBCmQIAAAAAAJBCmQJAlzR37twYOnRolJWVxdixY2PFihWpx2/ZsiVmzJgRgwYNitLS0jjqqKNi8eLFnTQtAF2VPAEgC/IEgJ6FHgAA3m/hwoVRU1MT8+bNi7Fjx8acOXNi/Pjx8eKLL8aAAQN2OX779u3xqU99KgYMGBAPPPBADBkyJP74xz/GgQce2PnDA9BlyBMAsiBPAIhQpgDQBd16661x/vnnx7Rp0yIiYt68ebFo0aK466674sorr9zl+Lvuuiv+/Oc/xzPPPBO9evWKiIihQ4d25sgAdEHyBIAsyBMAInzMFwBdzPbt22PlypVRXV3duq9Hjx5RXV0dy5cv3+05jzzySFRVVcWMGTOioqIijjvuuLjhhhuiubl5j8/T1NQUjY2NeRsA+w55AkAW5AkAOylTAOhSNm/eHM3NzVFRUZG3v6KiIurq6nZ7zrp16+KBBx6I5ubmWLx4cVxzzTVxyy23xHe+8509Pk9tbW2Ul5e3bpWVlZm+DgAKS54AkAV5AsBOyhQAur2WlpYYMGBA3HHHHTFq1KiYNGlSXHXVVTFv3rw9njNz5sxoaGho3TZu3NiJEwPQFckTALIgTwD2Te6ZAkCX0r9//yguLo76+vq8/fX19TFw4MDdnjNo0KDo1atXFBcXt+47+uijo66uLrZv3x4lJSW7nFNaWhqlpaXZDg9AlyFPAMiCPAFgJ+9MAaBLKSkpiVGjRsXSpUtb97W0tMTSpUujqqpqt+ecfPLJ8fLLL0dLS0vrvpdeeikGDRq02z9UANj3yRMAsiBPANhJmQJAl1NTUxPz58+Pe+65J9auXRsXXnhhbNu2LaZNmxYREVOmTImZM2e2Hn/hhRfGn//857jkkkvipZdeikWLFsUNN9wQM2bMKNRLAKALkCcAZEGeABDhY74A6IImTZoUb7zxRsyaNSvq6upi5MiRsWTJktabPm7YsCF69Mj9e4DKysp49NFH47LLLovjjz8+hgwZEpdccklcccUVhXoJAHQB8gSALMgTACIiipIkSQo9RHs1NjZGeXl5NDQ0RL9+/fbqsc6b8/N44bU/ZzRZ9zRsyMFx76WfK/QY7Iafz3f5Gc1WltfQfYH1AGgf18981gOg/VxDc6wFQPt11DXUx3wBAAAAAACkUKYAAAAAAACkUKYAAAAAAACkUKYAAAAAAACkUKYAAAAAAACkUKYAAAAAAACkUKYAAAAAAACkUKYAAAAAAACkUKYAAAAAAACkUKYAAAAAAACkaFeZcvrpp8eWLVt22d/Y2Binn3763s4EAAAAAADQZbSrTFm2bFls3759l/1vv/12/PrXv97roQAAAAAAALqKnm05+Le//W3r/37++eejrq6u9evm5uZYsmRJDBkyJLvpAAAAAAAACqxNZcrIkSOjqKgoioqKdvtxXr17944f/vCHmQ0HAAAAAABQaG0qU9avXx9JksThhx8eK1asiA9/+MOt3yspKYkBAwZEcXFx5kMCAAAAAAAUSpvKlMMOOywiIlpaWjpkGAAAAAAAgK6mTWXKe/3hD3+IJ554IjZt2rRLuTJr1qy9HgwAAAAAAKAraFeZMn/+/Ljwwgujf//+MXDgwCgqKmr9XlFRkTIFAAAAAADYZ7SrTPnOd74T3/3ud+OKK67Ieh4AAAAAAIAupUd7TvrLX/4SX/ziF7OeBQAAAAAAoMtpV5nyxS9+MX7xi19kPQsAAAAAAECX066P+TryyCPjmmuuid/85jcxfPjw6NWrV973//Ef/zGT4QAAAAAAAAqtXWXKHXfcEX369Iknn3wynnzyybzvFRUVKVMAAAAAAIB9RrvKlPXr12fy5Lfffnvcfvvt8eqrr0ZExLHHHhuzZs2Kz3zmM5k8PgAAAAAAwN5q1z1TsvKRj3wkbrzxxli5cmU8++yzcfrpp8dZZ50Vv//97ws5FgAAAAAAQKt2vTPly1/+cur377rrrg/0OBMmTMj7+rvf/W7cfvvt8Zvf/CaOPfbYXY5vamqKpqam1q8bGxs/0PMAAAAAAAC0V7vKlL/85S95X+/YsSN+97vfxZYtW+L0009v1yDNzc1x//33x7Zt26Kqqmq3x9TW1sa1117brscHAAAAAABoj3aVKQ899NAu+1paWuLCCy+MI444ok2P9dxzz0VVVVW8/fbb0adPn3jooYfimGOO2e2xM2fOjJqamtavGxsbo7Kysm3DAwAAAAAAtEFm90zp0aNH1NTUxA9+8IM2nffxj3881qxZE//v//2/uPDCC2Pq1Knx/PPP7/bY0tLS6NevX94GAAAAAADQkdr1zpQ9eeWVV+Kdd95p0zklJSVx5JFHRkTEqFGj4j//8z/jn//5n+Nf//VfsxwNAAAAAACgXdpVprz3o7YiIpIkiddffz0WLVoUU6dO3auBWlpa8m4yDwAAAAAAUEjtKlNWr16d93WPHj3iwx/+cNxyyy3x5S9/+QM/zsyZM+Mzn/lMHHroobF169a47777YtmyZfHoo4+2ZywAAAAAAIDMtatMeeKJJzJ58k2bNsWUKVPi9ddfj/Ly8jj++OPj0UcfjU996lOZPD4AAAAAAMDe2qt7przxxhvx4osvRsS7N5L/8Ic/3Kbz77zzzr15egAAAAAAgA7Xoz0nbdu2Lb785S/HoEGD4pOf/GR88pOfjMGDB8f06dPjrbfeynpGAAAAAACAgmlXmVJTUxNPPvlk/N//+39jy5YtsWXLlviP//iPePLJJ+Of/umfsp4RAAAAAACgYNr1MV//5//8n3jggQfi1FNPbd135plnRu/evePss8+O22+/Pav5AAAAAAAACqpd70x56623oqKiYpf9AwYM8DFfAAAAAADAPqVdZUpVVVXMnj073n777dZ9f/3rX+Paa6+NqqqqzIYDAAAAAAAotHZ9zNecOXPijDPOiI985CMxYsSIiIj4r//6rygtLY1f/OIXmQ4IAAAAAABQSO0qU4YPHx5/+MMf4t57740XXnghIiLOOeecOO+886J3796ZDggAAAAAAFBI7SpTamtro6KiIs4///y8/XfddVe88cYbccUVV2QyHAAAAAAAQKG1654p//qv/xrDhg3bZf+xxx4b8+bN2+uhAAAAAAAAuop2lSl1dXUxaNCgXfZ/+MMfjtdff32vhwIAAAAAAOgq2lWmVFZWxtNPP73L/qeffjoGDx6810MBAAAAAAB0Fe26Z8r5558fl156aezYsSNOP/30iIhYunRpfPOb34x/+qd/ynRAAAAAAACAQmpXmXL55ZfHn/70p7joooti+/btERFRVlYWV1xxRcycOTPTAQEAAAAAAAqpXWVKUVFRfO9734trrrkm1q5dG717946PfexjUVpamvV8AAAAAAAABdWuMmWnPn36xCc+8YmsZgEAAAAAAOhy2nUDegAAAAAAgP2FMgUAAAAAACCFMgUAAAAAACCFMgUAAAAAACCFMgUAAAAAACCFMgUAAAAAACCFMgUAAAAAACCFMgUAAAAAACCFMgWALmnu3LkxdOjQKCsri7Fjx8aKFSs+0HkLFiyIoqKimDhxYscOCEC3IE8AyII8AUCZAkCXs3DhwqipqYnZs2fHqlWrYsSIETF+/PjYtGlT6nmvvvpqfOMb34hx48Z10qQAdGXyBIAsyBMAIpQpAHRBt956a5x//vkxbdq0OOaYY2LevHlxwAEHxF133bXHc5qbm+O8886La6+9Ng4//PBOnBaArkqeAJAFeQJAhDIFgC5m+/btsXLlyqiurm7d16NHj6iuro7ly5fv8bzrrrsuBgwYENOnT/9Az9PU1BSNjY15GwD7DnkCQBbkCQA7KVMA6FI2b94czc3NUVFRkbe/oqIi6urqdnvOU089FXfeeWfMnz//Az9PbW1tlJeXt26VlZV7NTcAXYs8ASAL8gSAnZQpAHRrW7dujcmTJ8f8+fOjf//+H/i8mTNnRkNDQ+u2cePGDpwSgK5OngCQBXkCsO/qWegBAOC9+vfvH8XFxVFfX5+3v76+PgYOHLjL8a+88kq8+uqrMWHChNZ9LS0tERHRs2fPePHFF+OII47Y5bzS0tIoLS3NeHoAugp5AkAW5AkAO3lnCgBdSklJSYwaNSqWLl3auq+lpSWWLl0aVVVVuxw/bNiweO6552LNmjWt2+c///k47bTTYs2aNd4eD7CfkicAZEGeALCTd6YA0OXU1NTE1KlTY/To0TFmzJiYM2dObNu2LaZNmxYREVOmTIkhQ4ZEbW1tlJWVxXHHHZd3/oEHHhgRsct+APYv8gSALMgTACKUKQB0QZMmTYo33ngjZs2aFXV1dTFy5MhYsmRJ600fN2zYED16eHMlAOnkCQBZkCcAREQUJUmSFHqI9mpsbIzy8vJoaGiIfv367dVjnTfn5/HCa3/OaLLuadiQg+PeSz9X6DHYDT+f7/Izmq0sr6H7AusB0D6un/msB0D7uYbmWAuA9uuoa6jaHAAAAAAAIIUyBQAAAAAAIIUyBQAAAAAAIIUyBQAAAAAAIIUyBQAAAAAAIIUyBQAAAAAAIIUyBQAAAAAAIIUyBQAAAAAAIIUyBQAAAAAAIIUyBQAAAAAAIIUyBQAAAAAAIEVBy5Ta2tr4xCc+EX379o0BAwbExIkT48UXXyzkSAAAAAAAAHkKWqY8+eSTMWPGjPjNb34Tjz32WOzYsSM+/elPx7Zt2wo5FgAAAAAAQKuehXzyJUuW5H199913x4ABA2LlypXxyU9+skBTAQAAAAAA5BS0THm/hoaGiIg4+OCDd/v9pqamaGpqav26sbGxU+YCAAAAAAD2X13mBvQtLS1x6aWXxsknnxzHHXfcbo+pra2N8vLy1q2ysrKTpwQAAAAAAPY3XaZMmTFjRvzud7+LBQsW7PGYmTNnRkNDQ+u2cePGTpwQAAAAAADYH3WJj/m6+OKL4+c//3n86le/io985CN7PK60tDRKS0s7cTIAAAAAAGB/V9AyJUmS+PrXvx4PPfRQLFu2LD760Y8WchwAAAAAAIBdFLRMmTFjRtx3333xH//xH9G3b9+oq6uLiIjy8vLo3bt3IUcDAAAAAACIiALfM+X222+PhoaGOPXUU2PQoEGt28KFCws5FgAAAAAAQKuCf8wXAAAAAABAV1bQd6YAAAAAAAB0dcoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUAAAAAACAFMoUoNs4pG9ZJC3NhR6jy7AWAAAAANA5ehZ6AIAPqm9ZSRT1KI7ND14ZOzavK/Q4BdWr/+HR//93Y6HHAAAAAID9gjIF6HZ2bF4XO+rWFnoMAAAAAGA/4WO+AAAAAAAAUihTAAAAAAAAUihTAAAAAAAAUihTAAAAAAAAUihTAOiS5s6dG0OHDo2ysrIYO3ZsrFixYo/Hzp8/P8aNGxcHHXRQHHTQQVFdXZ16PAD7D3kCQBbkCQDKFAC6nIULF0ZNTU3Mnj07Vq1aFSNGjIjx48fHpk2bdnv8smXL4pxzzoknnngili9fHpWVlfHpT386XnvttU6eHICuRJ4AkAV5AkCEMgWALujWW2+N888/P6ZNmxbHHHNMzJs3Lw444IC46667dnv8vffeGxdddFGMHDkyhg0bFj/+8Y+jpaUlli5d2smTA9CVyBMAsiBPAIhQpgDQxWzfvj1WrlwZ1dXVrft69OgR1dXVsXz58g/0GG+99Vbs2LEjDj744D0e09TUFI2NjXkbAPsOeQJAFuQJADspUwDoUjZv3hzNzc1RUVGRt7+ioiLq6uo+0GNcccUVMXjw4Lw/eN6vtrY2ysvLW7fKysq9mhuArkWeAJAFeQLATsoUAPYpN954YyxYsCAeeuihKCsr2+NxM2fOjIaGhtZt48aNnTglAF2dPAEgC/IEYN/Rs9ADAMB79e/fP4qLi6O+vj5vf319fQwcODD13JtvvjluvPHGePzxx+P4449PPba0tDRKS0v3el4AuiZ5AkAW5AkAO3lnCgBdSklJSYwaNSrv5ow7b9ZYVVW1x/NuuummuP7662PJkiUxevTozhgVgC5MngCQBXkCwE7emQJAl1NTUxNTp06N0aNHx5gxY2LOnDmxbdu2mDZtWkRETJkyJYYMGRK1tbUREfG9730vZs2aFffdd18MHTq09bOL+/TpE3369CnY6wCgsOQJAFmQJwBEKFMA6IImTZoUb7zxRsyaNSvq6upi5MiRsWTJktabPm7YsCF69Mi9ufL222+P7du3xxe+8IW8x5k9e3Z8+9vf7szRAehC5AkAWZAnAEQoUwDooi6++OK4+OKLd/u9ZcuW5X396quvdvxAAHRL8gSALMgTAAp6z5Rf/epXMWHChBg8eHAUFRXFww8/XMhxAAAAAAAAdlHQMmXbtm0xYsSImDt3biHHAAAAAAAA2KOCfszXZz7zmfjMZz5TyBEAAAAAAABSdat7pjQ1NUVTU1Pr142NjQWcBgAAAAAA2B8U9GO+2qq2tjbKy8tbt8rKykKPBAAAAAAA7OO6VZkyc+bMaGhoaN02btxY6JEAAAAAAIB9XLf6mK/S0tIoLS0t9BgAAAAAAMB+pFu9MwUAAAAAAKCzFfSdKW+++Wa8/PLLrV+vX78+1qxZEwcffHAceuihBZwMAAAAAADgXQUtU5599tk47bTTWr+uqamJiIipU6fG3XffXaCpAAAAAAAAcgpappx66qmRJEkhRwAAAAAAAEjlnikAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAAplCkAAAAAAAApukSZMnfu3Bg6dGiUlZXF2LFjY8WKFYUeCYACa2s23H///TFs2LAoKyuL4cOHx+LFiztpUgC6MnkCQBbkCQAFL1MWLlwYNTU1MXv27Fi1alWMGDEixo8fH5s2bSr0aAAUSFuz4Zlnnolzzjknpk+fHqtXr46JEyfGxIkT43e/+10nTw5AVyJPAMiCPAEgoguUKbfeemucf/75MW3atDjmmGNi3rx5ccABB8Rdd91V6NH2O4f0LYukpbnQY3Qp1gMKo63Z8M///M9xxhlnxOWXXx5HH310XH/99XHiiSfGbbfd1smTA9CVyBMAsiBPAIiI6FnIJ9++fXusXLkyZs6c2bqvR48eUV1dHcuXL9/l+Kampmhqamr9uqGhISIiGhsb93qWwX16xo5Dyvb6cbqzQw8sia1vbouGp++K5sa6Qo9TcMX9Bkb5yV8u9BgR4edzp4PK3v19f/uAIbGjfEehxymo5gOG7PW1b+f5SZJkMVJm2poNERHLly+PmpqavH3jx4+Phx9+eI/P05GZArA/kSfyBCArXTFT5AlA99NReVLQMmXz5s3R3NwcFRUVefsrKirihRde2OX42trauPbaa3fZX1lZ2WEz7k/uj4jLCz1El3NZoQfgPfyMvt+cTB5l69atUV5ensljZaGt2RARUVdXt9vj6+r2XAzLFIBs/elPf5In7yFPANqvK2WKPAHovrLOk4KWKW01c+bMvGa/paUl/vznP8chhxwSRUVFBZxs39DY2BiVlZWxcePG6NevX6HHgV34Gc1WkiSxdevWGDx4cKFHKYj3Z8qWLVvisMMOiw0bNnSZP9wKxe9ajrXIZz1yrEVOQ0NDHHrooXHwwQcXepSCkCd75vckn/XIsRY51iLf/pwp8iSd35Uca5FjLfJZj5yOypOClin9+/eP4uLiqK+vz9tfX18fAwcO3OX40tLSKC0tzdt34IEHduSI+6V+/frt979wdG1+RrPTFf+jvK3ZEBExcODANh0fsftMiXh3Tfx8vcvvWo61yGc9cqxFTo8eBb8dYx550nX4PclnPXKsRY61yNeVMkWedC1+V3KsRY61yGc9crLOk4KmU0lJSYwaNSqWLl3auq+lpSWWLl0aVVVVBZwMgEJpTzZUVVXlHR8R8dhjj8kSgP2YPAEgC/IEgJ0K/jFfNTU1MXXq1Bg9enSMGTMm5syZE9u2bYtp06YVejQACuRvZcOUKVNiyJAhUVtbGxERl1xySZxyyilxyy23xGc/+9lYsGBBPPvss3HHHXcU8mUAUGDyBIAsyBMAIrpAmTJp0qR44403YtasWVFXVxcjR46MJUuW7HKjLjpeaWlpzJ49e7dvK4WuwM/o/uNvZcOGDRvy3qp50kknxX333RdXX311fOtb34qPfexj8fDDD8dxxx33gZ/Tz1eOtcixFvmsR461yOnKayFPCsta5LMeOdYix1rk66rrIU8Kz3rkWIsca5HPeuR01FoUJUmSZPqIAAAAAAAA+5Cuc0cvAAAAAACALkiZAgAAAAAAkEKZAgAAAAAAkEKZAgAAAAAAkEKZQqu5c+fG0KFDo6ysLMaOHRsrVqwo9EgQERG/+tWvYsKECTF48OAoKiqKhx9+uNAj0Q219Rp3//33x7Bhw6KsrCyGDx8eixcv7qRJO0db1mP+/Pkxbty4OOigg+Kggw6K6urqfSoj2pt/CxYsiKKiopg4cWLHDtjJ2roeW7ZsiRkzZsSgQYOitLQ0jjrqqH3m96WtazFnzpz4+Mc/Hr17947Kysq47LLL4u233+6kaTtOe3J42bJlceKJJ0ZpaWkceeSRcffdd3f4nJ1JpuTIk3wyJUee5MiTd8mTXcmTfDIlR57kyJN8MuVdBcuUBJIkWbBgQVJSUpLcddddye9///vk/PPPTw488MCkvr6+0KNBsnjx4uSqq65KHnzwwSQikoceeqjQI9HNtPUa9/TTTyfFxcXJTTfdlDz//PPJ1VdfnfTq1St57rnnOnnyjtHW9Tj33HOTuXPnJqtXr07Wrl2bfOlLX0rKy8uT//7v/+7kybPX3vxbv359MmTIkGTcuHHJWWed1TnDdoK2rkdTU1MyevTo5Mwzz0yeeuqpZP369cmyZcuSNWvWdPLk2WvrWtx7771JaWlpcu+99ybr169PHn300WTQoEHJZZdd1smTZ6+tObxu3brkgAMOSGpqapLnn38++eEPf5gUFxcnS5Ys6ZyBO5hMyZEn+WRKjjzJkSc58iSfPMknU3LkSY48ySdTcgqVKcoUkiRJkjFjxiQzZsxo/bq5uTkZPHhwUltbW8CpYFfKFNqjrde4s88+O/nsZz+bt2/s2LHJ1772tQ6ds7Ps7TX/nXfeSfr27Zvcc889HTVip2nPWrzzzjvJSSedlPz4xz9Opk6dus/8oZIkbV+P22+/PTn88MOT7du3d9aInaatazFjxozk9NNPz9tXU1OTnHzyyR06Z2f7IDn8zW9+Mzn22GPz9k2aNCkZP358B07WeWRKjjzJJ1Ny5EmOPNk9eSJP3k+m5MiTHHmST6bsXmdmio/5IrZv3x4rV66M6urq1n09evSI6urqWL58eQEnA9h77bnGLV++PO/4iIjx48fvE9fELK75b731VuzYsSMOPvjgjhqzU7R3La677roYMGBATJ8+vTPG7DTtWY9HHnkkqqqqYsaMGVFRURHHHXdc3HDDDdHc3NxZY3eI9qzFSSedFCtXrmx9m/26deti8eLFceaZZ3bKzF2Ja2i+fXU95Ek+mZIjT3Lkyd7ZV6+fEfLk/WRKjjzJkSf5ZMreyeoa2jPLoeieNm/eHM3NzVFRUZG3v6KiIl544YUCTQWQjfZc4+rq6nZ7fF1dXYfN2VmyuOZfccUVMXjw4F3+Q6S7ac9aPPXUU3HnnXfGmjVrOmHCztWe9Vi3bl388pe/jPPOOy8WL14cL7/8clx00UWxY8eOmD17dmeM3SHasxbnnntubN68Of7u7/4ukiSJd955Jy644IL41re+1Rkjdyl7uoY2NjbGX//61+jdu3eBJtt7MiVHnuSTKTnyJEee7B15km9fzZMImfJe8iRHnuSTKXsnq0zxzhQA4AO78cYbY8GCBfHQQw9FWVlZocfpVFu3bo3JkyfH/Pnzo3///oUep0toaWmJAQMGxB133BGjRo2KSZMmxVVXXRXz5s0r9GidbtmyZXHDDTfEj370o1i1alU8+OCDsWjRorj++usLPRp0SftznkTIlPeTJznyBNpuf84UeZJPnuSTKdnzzhSif//+UVxcHPX19Xn76+vrY+DAgQWaCiAb7bnGDRw4cJ+9Ju7NNf/mm2+OG2+8MR5//PE4/vjjO3LMTtHWtXjllVfi1VdfjQkTJrTua2lpiYiInj17xosvvhhHHHFExw7dgdrzszFo0KDo1atXFBcXt+47+uijo66uLrZv3x4lJSUdOnNHac9aXHPNNTF58uT4yle+EhERw4cPj23btsVXv/rVuOqqq6JHj/3n3zDt6Rrar1+/bv2viCNkynvJk3wyJUee5MiTvSNP8u2reRIhU95LnuTIk3wyZe9klSn7z4qxRyUlJTFq1KhYunRp676WlpZYunRpVFVVFXAygL3XnmtcVVVV3vEREY899tg+cU1s7zX/pptuiuuvvz6WLFkSo0eP7oxRO1xb12LYsGHx3HPPxZo1a1q3z3/+83HaaafFmjVrorKysjPHz1x7fjZOPvnkePnll1v/YIuIeOmll2LQoEHd+g+V9qzFW2+9tcsfIzv/iHv3noj7D9fQfPvqesiTfDIlR57kyJO9s69ePyPkyfvJlBx5kiNP8smUvZPZNbRNt6tnn7VgwYKktLQ0ufvuu5Pnn38++epXv5oceOCBSV1dXaFHg2Tr1q3J6tWrk9WrVycRkdx6663J6tWrkz/+8Y+FHo1u4m9d4yZPnpxceeWVrcc//fTTSc+ePZObb745Wbt2bTJ79uykV69eyXPPPVeol5Cptq7HjTfemJSUlCQPPPBA8vrrr7duW7duLdRLyExb1+L9pk6dmpx11lmdNG3Ha+t6bNiwIenbt29y8cUXJy+++GLy85//PBkwYEDyne98p1AvITNtXYvZs2cnffv2TX76058m69atS37xi18kRxxxRHL22WcX6iVk5m/l8JVXXplMnjy59fh169YlBxxwQHL55Zcna9euTebOnZsUFxcnS5YsKdRLyJRMyZEn+WRKjjzJkSc58iSfPMknU3LkSY48ySdTcgqVKcoUWv3whz9MDj300KSkpCQZM2ZM8pvf/KbQI0GSJEnyxBNPJBGxyzZ16tRCj0Y3knaNO+WUU3b5efrZz36WHHXUUUlJSUly7LHHJosWLerkiTtWW9bjsMMO2+3v4OzZszt/8A7Q1p+N99qX/lDZqa3r8cwzzyRjx45NSktLk8MPPzz57ne/m7zzzjudPHXHaMta7NixI/n2t7+dHHHEEUlZWVlSWVmZXHTRRclf/vKXzh88Y38rh6dOnZqccsopu5wzcuTIpKSkJDn88MOTn/zkJ50+d0eSKTnyJJ9MyZEnOfLkXfJkV/Ikn0zJkSc58iSfTHlXoTKlKEn2s/f0AAAAAAAAtIF7pgAAAAAAAKRQpgAAAAAAAKRQpgAAAAAAAKRQpgAAAAAAAKRQpgAAAAAAAKRQpgAAAAAAAKRQpgAAAAAAAKRQpgAAAAAAAKRQptCtDR06NObMmbPH77/66qtRVFQUa9as+UCP96UvfSkmTpyYyWwAAAAAAOwblCkUzIQJE+KMM87Y7fd+/etfR1FRUfz2t7/dq+eorKyM119/PY477ri9epz22Fnk7Nz69u0bxx57bMyYMSP+8Ic/dPo8AAAAAAC0jzKFgpk+fXo89thj8d///d+7fO8nP/lJjB49Oo4//vi9eo7i4uIYOHBg9OzZc68eZ288/vjj8frrr8d//dd/xQ033BBr166NESNGxNKlSws2EwAAAAAAH5wyhYL53Oc+Fx/+8Ifj7rvvztv/5ptvxv333x/Tp0+Pp556KsaNGxe9e/eOysrK+Md//MfYtm1b3vFvvfVWfPnLX46+ffvGoYceGnfccUfr93b3MV+///3v43Of+1z069cv+vbtG+PGjYtXXnlltzO2tLREbW1tfPSjH43evXvHiBEj4oEHHmjT6zzkkENi4MCBcfjhh8dZZ50Vjz/+eIwdOzamT58ezc3NERHxyiuvxFlnnRUVFRXRp0+f+MQnPhGPP/543uMMHTo0vvOd78SUKVOiT58+cdhhh8UjjzwSb7zxRpx11lnRp0+fOP744+PZZ59tPedPf/pTnHPOOTFkyJA44IADYvjw4fHTn/4073G3bt0a5513XnzoQx+KQYMGxQ9+8IM49dRT49JLL209pqmpKb7xjW/EkCFD4kMf+lCMHTs2li1b1qZ1AAAAAADorpQpFEzPnj1jypQpcffdd0eSJK3777///mhubo6qqqo444wz4n//7/8dv/3tb2PhwoXx1FNPxcUXX5z3OLfcckuMHj06Vq9eHRdddFFceOGF8eKLL+72OV977bX45Cc/GaWlpfHLX/4yVq5cGV/+8pfjnXfe2e3xtbW18W//9m8xb968+P3vfx+XXXZZ/MM//EM8+eST7X7dPXr0iEsuuST++Mc/xsqVKyPi3QLpzDPPjKVLl8bq1avjjDPOiAkTJsSGDRvyzv3BD34QJ598cqxevTo++9nPxuTJk2PKlCnxD//wD7Fq1ao44ogjYsqUKa3r+fbbb8eoUaNi0aJF8bvf/S6++tWvxuTJk2PFihWtj1lTUxNPP/10PPLII/HYY4/Fr3/961i1alXe81588cWxfPnyWLBgQfz2t7+NL37xi3HGGWf4uDIAAAAAYL9QlLz3/8WGTvbCCy/E0UcfHU888USceuqpERHxyU9+Mg477LAoLS2N4uLi+Nd//dfW45966qk45ZRTYtu2bVFWVhZDhw6NcePGxb//+79HRESSJDFw4MC49tpr44ILLohXX301PvrRj8bq1atj5MiR8a1vfSsWLFgQL774YvTq1WuXeb70pS/Fli1b4uGHH46mpqY4+OCD4/HHH4+qqqrWY77yla/EW2+9Fffdd1/qa3v/c+/udS9cuDDOPvvs3Z5/3HHHxQUXXNBaHr3/tdbV1cWgQYPimmuuieuuuy4iIn7zm99EVVVVvP766zFw4MDdPu7nPve5GDZsWNx8882xdevWOOSQQ+K+++6LL3zhCxER0dDQEIMHD47zzz8/5syZExs2bIjDDz88NmzYEIMHD259nOrq6hgzZkzccMMNqesAAAAAANDdFe5GEhARw4YNi5NOOinuuuuuOPXUU+Pll1+OX//613HdddfF5ZdfHr/97W/j3nvvbT0+SZJoaWmJ9evXx9FHHx0RkXdflaKiohg4cGBs2rRpt8+3Zs2aGDdu3G6LlPd7+eWX46233opPfepTefu3b98eJ5xwQntebqudHWZRUVFEvPvOlG9/+9uxaNGieP311+Odd96Jv/71r7u8M+W9r7WioiIiIoYPH77Lvk2bNsXAgQOjubk5brjhhvjZz34Wr732Wmzfvj2amprigAMOiIiIdevWxY4dO2LMmDGtj1FeXh4f//jHW79+7rnnorm5OY466qi8WZqamuKQQw7Zq3UAAAAAAOgOlCkU3PTp0+PrX/96zJ07N37yk5/EEUccEaecckq8+eab8bWvfS3+8R//cZdzDj300Nb//f5ipKioKFpaWnb7XL179/7Ac7355psREbFo0aIYMmRI3vdKS0s/8OPsztq1ayMi4qMf/WhERHzjG9+Ixx57LG6++eY48sgjo3fv3vGFL3whtm/fnnfee1/rziJmd/t2vv7vf//78c///M8xZ86cGD58eHzoQx+KSy+9dJfHTfPmm29GcXFxrFy5MoqLi/O+16dPnw/8OAAAAAAA3ZUyhYI7++yz45JLLon77rsv/u3f/i0uvPDCKCoqihNPPDGef/75OPLIIzN7ruOPPz7uueee2LFjx998d8oxxxwTpaWlsWHDhjjllFMym6GlpSX+5V/+JT760Y+2vsPl6aefji996Uvxv/7X/4qIdwuMV199da+f6+mnn46zzjor/uEf/qH1uV966aU45phjIiLi8MMPj169esV//ud/thZUDQ0N8dJLL8UnP/nJiIg44YQTorm5OTZt2hTjxo3b65kAAAAAALobN6Cn4Pr06ROTJk2KmTNnxuuvvx5f+tKXIiLiiiuuiGeeeSYuvvjiWLNmTfzhD3+I//iP/9jlBvRtcfHFF0djY2P8/d//fTz77LPxhz/8If793/99tzes79u3b3zjG9+Iyy67LO6555545ZVXYtWqVfHDH/4w7rnnng/8nH/605+irq4u1q1bF4888khUV1fHihUr4s4772x9p8fHPvaxePDBB2PNmjXxX//1X3Huuefu8d01bfGxj30sHnvssXjmmWdi7dq18bWvfS3q6+vzXuPUqVPj8ssvjyeeeCJ+//vfx/Tp06NHjx6t73I56qij4rzzzospU6bEgw8+GOvXr48VK1ZEbW1tLFq0aK9nBAAAAADo6pQpdAnTp0+Pv/zlLzF+/PjWm5wff/zx8eSTT8ZLL70U48aNixNOOCFmzZqVdxP0tjrkkEPil7/8Zbz55ptxyimnxKhRo2L+/Pl7fJfK9ddfH9dcc03U1tbG0UcfHWeccUYsWrSo9eO5Pojq6uoYNGhQDB8+PK688so4+uij47e//W2cdtpprcfceuutcdBBB8VJJ50UEyZMiPHjx8eJJ57Y7te509VXXx0nnnhijB8/Pk499dQYOHBgTJw4Me+YW2+9NaqqquJzn/tcVFdXx8knnxxHH310lJWVtR7zk5/8JKZMmRL/9E//FB//+Mdj4sSJee9mAQAAAADYlxUlO++EDRAR27ZtiyFDhsQtt9wS06dPL/Q4AAAAAAAF554psJ9bvXp1vPDCCzFmzJhoaGiI6667LiIizjrrrAJPBgAAAADQNfiYL2inCy64IPr06bPb7YILLij0eG1y8803x4gRI6K6ujq2bdsWv/71r6N///6FHgsAAAAAoEvwMV/QTps2bYrGxsbdfq9fv34xYMCATp4IAAAAAICOoEwBAAAAAABI4WO+AAAAAAAAUihTAAAAAAAAUihTAAAAAAAA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"},"metadata":{}}]},{"cell_type":"code","source":"##Identifying continuous features\nconti_cols=df_dtype['cols'][df_dtype.val_type=='conti']\ndisplay(df_dtype[df_dtype.val_type=='conti'])\nprint('Continuous Feature count:',len(conti_cols))","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:38:10.883846Z","iopub.execute_input":"2024-07-10T15:38:10.884972Z","iopub.status.idle":"2024-07-10T15:38:10.903471Z","shell.execute_reply.started":"2024-07-10T15:38:10.884923Z","shell.execute_reply":"2024-07-10T15:38:10.902042Z"},"trusted":true},"execution_count":21,"outputs":[{"output_type":"display_data","data":{"text/plain":"                   cols data_type  unique_val val_type\n3           Region_Code   float32          54    conti\n7        Annual_Premium   float32       51728    conti\n8  Policy_Sales_Channel   float32         152    conti","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cols</th>\n      <th>data_type</th>\n      <th>unique_val</th>\n      <th>val_type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>3</th>\n      <td>Region_Code</td>\n      <td>float32</td>\n      <td>54</td>\n      <td>conti</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Annual_Premium</td>\n      <td>float32</td>\n      <td>51728</td>\n      <td>conti</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Policy_Sales_Channel</td>\n      <td>float32</td>\n      <td>152</td>\n      <td>conti</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"name":"stdout","text":"Continuous Feature count: 3\n","output_type":"stream"}]},{"cell_type":"code","source":"plt.figure()\nfig, ax = plt.subplots(7,1 ,figsize=(20,25))\nsns.set_style(\"darkgrid\", {\"grid.color\": \".6\", \"grid.linestyle\": \":\"})\nfor i,feature in enumerate(conti_cols):\n    plt.subplot(7, 1,i+1)\n    df=df_train[[feature,'Target']]\n    sns.boxplot(data=df,x=df[feature],y=df['Target'])\n    \n# fig.tight_layout(pad=2.0)    \nplt.show();","metadata":{"execution":{"iopub.status.busy":"2024-07-10T15:38:10.905449Z","iopub.execute_input":"2024-07-10T15:38:10.905850Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"correlation_matrix = df_train.corr()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"correlation_matrix","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"features = list(df_test.columns)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"correlation_matrix = df_train.corr()\n\nplt.figure(figsize=(11, 11))\nsns.heatmap(correlation_matrix*10, center=0, cmap='coolwarm', annot=True, fmt='.0f',\n            xticklabels= features, yticklabels= features)\nplt.title('Correlation matrix')\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}